{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/cart/cart-button.component.ts","webpack:///src/app/components/cart/cart-button.component.html","webpack:///src/app/components/cart/cart.component.html","webpack:///src/app/components/cart/cart.component.ts","webpack:///src/app/components/checkout/checkout.component.html","webpack:///src/app/components/checkout/checkout.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/products/products.component.html","webpack:///src/app/components/products/products.component.ts","webpack:///src/app/components/thank-you/thank-you.component.ts","webpack:///src/app/components/thank-you/thank-you.component.html","webpack:///src/app/models/state.ts","webpack:///src/app/services/cart.service.ts","webpack:///src/app/services/datalayer.service.ts","webpack:///src/app/services/product.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","ProductsComponent","CartComponent","CheckoutComponent","ThankYouComponent","redirectTo","AppRoutingModule","RouterModule","relativeLinkResolution","AppComponent","title","orgId","devMode","AppModule","CartService","ProductService","ScreenTrackingService","BrowserModule","AngularFireModule","environment","AngularFireAnalyticsModule","AngularFireAuthModule","BrowserAnimationsModule","FlexLayoutModule","HttpClientModule","MatBadgeModule","MatButtonModule","MatCardModule","MatFormFieldModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatSelectModule","MatSnackBarModule","MatTableModule","MatToolbarModule","MatTooltipModule","CartButtonComponent","LoginComponent","cartService","getItems","subscribe","items","cartBadge","length","displayedColumns","totalCost","initDataSource","initCalculator","items$","calculateTotalCost","item","removeItem","datalayer","router","shippableStates","states","pipe","first","checkout","clear","navigate","auth","user","uid","displayName","email","signInWithPopup","signOut","mediaObserver","productService","snackbar","columnBreakpoints","numColumns","products","observeBreakpoints","buildProductList","product","addItem","open","duration","startOfPlayback","playbackAtThisMomentInTime","uid_str","plan_name_str","plan_price_real","plan_users_int","days_in_trial_int","feature_packs","media$","change","n","mqAlias","getProducts","name","abbreviation","subject","ReplaySubject","productId","find","quantity","next","addToCart","getProduct","push","reduce","acc","price","index","findIndex","splice","removeFromCart","DatalayerService","analytics","logEvent","Object","assign","window","utag","data","tealiumCart","digitalData","cart","map","ceddlProductItem","ceddlTotalCartPrice","tealiumCheckout","tealiumEvent","cart_product_id","toString","cart_product_price","cart_product_quantity","product_id","product_image_url","image","product_name","product_original_price","product_price","product_quantity","tealium_event","cart_total_items","cart_total_value","tax","order_currency_code","order_discount_amount","order_id","Date","now","order_payment_type","order_promo_code","order_shipping_amount","order_shipping_type","order_subtotal","order_tax_amount","order_total","page_name","page_type","basePrice","currency","taxRate","shipping","shippingMethod","priceWithTax","voucherCode","voucherDiscount","productID","productName","description","productImage","productURL","location","host","productThumbnail","manufacturer","sku","color","size","productInfo","ceddlProductInfo","category","primaryCategory","ceddlPrice","linkedProduct","attributes","cartTotal","sanitizer","http","snackBar","imageUrl","apiUrl","catchError","handleError","url","get","setImageUrl","query","operation","result","error","message","console","of","bypassSecurityTrustStyle","production","localApiRoot","remoteApiRoot","useMockApi","firebase","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":";;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAA,8BAAwB,CAACS,EAAzB,GAA8B,KAA9B;AACAC,YAAM,CAACC,OAAP,GAAiBX,wBAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA,UAAMY,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE,yCAAAC;AAAvB,OADqB,EAErB;AAAEF,YAAI,EAAE,MAAR;AAAgBC,iBAAS,EAAE,yCAAAE;AAA3B,OAFqB,EAGrB;AAAEH,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE,yCAAAG;AAA/B,OAHqB,EAIrB;AAAEJ,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE,yCAAAC;AAA/B,OAJqB,EAKrB;AAAEF,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE,yCAAAI;AAA/B,OALqB,EAMrB;AAAEL,YAAI,EAAE,IAAR;AAAcM,kBAAU,EAAE;AAA1B,OANqB,CAAvB;;UAaaC,iB;;;;;yBAAAA,iB;AAAgB,O;;;cAAhBA;;;kBAHF,CAAC,6CAAAC,YAAA,SAAqBT,MAArB,EAA6B;AAAEU,gCAAsB,EAAE;AAA1B,SAA7B,CAAD,C,EACC,6CAAAD,Y;;;;4HAECD,iB,EAAgB;AAAA;AAAA,oBAFjB,6CAAAC,YAEiB;AAAA,S;AAFL,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPXE,a,GAGX,yBAAc;AAAA;;AACZ;AAHF,aAAAC,KAAA,GAAQ,gBAAR,CAEc,CAGZ;AACA;AACA;AACA;;AACA,6DAAe;AAAEC,eAAK,EAAE,QAAT;AACbC,iBAAO,EAAE;AADI,SAAf;AAED,O;;;yBAZUH,a;AAAY,O;;;cAAZA,a;AAAY,iC;AAAA,iB;AAAA,e;AAAA,+L;AAAA;AAAA;ACTzB;;AACE;;AACE;;AAAU;;AAAI;;AAChB;;AACA;;AAAgD;;;;AAAuB;;AACvE;;AACA;;AACA;;AACE;;AACF;;AACF;;AACA;;;;;;AAV0B;;AAAA;;AAGwB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoErCI,U;;;;;yBAAAA,U;AAAS,O;;;cAATA,U;AAAS,oBAFR,4CAAAJ,YAEQ;;;mBAPT,CACT,uCAAAK,WADS,EAET,uCAAAC,cAFS,EAGT,qDAAAC,qBAHS,C;AAIV,kBA5BQ,CACP,uDAAAC,aADO,EAEP,2CAAAC,iBAAA,eAAgC,0DAAAC,WAAA,SAAhC,CAFO,EAGP,qDAAAC,0BAHO,EAIP,iDAAAC,qBAJO,EAKP,iDAAAf,gBALO,EAMP,mEAAAgB,uBANO,EAOP,mDAAAC,gBAPO,EAQP,mDAAAC,gBARO,EASP,sDAAAC,cATO,EAUP,uDAAAC,eAVO,EAWP,qDAAAC,aAXO,EAYP,2DAAAC,kBAZO,EAaP,0DAAAC,iBAbO,EAcP,qDAAAC,aAdO,EAeP,sDAAAC,cAfO,EAgBP,qDAAAC,aAhBO,EAiBP,qDAAAC,aAjBO,EAkBP,uDAAAC,eAlBO,EAmBP,0DAAAC,iBAnBO,EAoBP,sDAAAC,cApBO,EAqBP,wDAAAC,gBArBO,EAsBP,wDAAAC,gBAtBO,CA4BR;;;;4HAGUzB,U,EAAS;AAAA,yBAvClB,4CAAAJ,YAuCkB,EAtClB,yCAAAP,aAsCkB,EArClB,yCAAAqC,mBAqCkB,EApClB,yCAAApC,iBAoCkB,EAnClB,yCAAAF,iBAmCkB,EAlClB,yCAAAG,iBAkCkB,EAjClB,+DAAAoC,cAiCkB;AAjCJ,oBAGd,uDAAAvB,aAHc,EAGD,4DAHC,EAKd,qDAAAG,0BALc,EAMd,iDAAAC,qBANc,EAOd,iDAAAf,gBAPc,EAQd,mEAAAgB,uBARc,EASd,mDAAAC,gBATc,EAUd,mDAAAC,gBAVc,EAWd,sDAAAC,cAXc,EAYd,uDAAAC,eAZc,EAad,qDAAAC,aAbc,EAcd,2DAAAC,kBAdc,EAed,0DAAAC,iBAfc,EAgBd,qDAAAC,aAhBc,EAiBd,sDAAAC,cAjBc,EAkBd,qDAAAC,aAlBc,EAmBd,qDAAAC,aAnBc,EAoBd,uDAAAC,eApBc,EAqBd,0DAAAC,iBArBc,EAsBd,sDAAAC,cAtBc,EAuBd,wDAAAC,gBAvBc,EAwBd,wDAAAC,gBAxBc;AAiCI,S;AATF,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCxDPC,oB;AAGX,sCAAoBE,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAEnB;;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKA,WAAL,CAAiBC,QAAjB,GAA4BC,SAA5B,CAAsC,UAAAC,KAAK;AAAA,qBAAI,KAAI,CAACC,SAAL,GAAiBD,KAAK,CAACE,MAA3B;AAAA,aAA3C;AACD;;;;;;;yBATUP,oB,EAAmB,mH;AAAA,O;;;cAAnBA,oB;AAAmB,wC;AAAA,gB;AAAA,e;AAAA,2O;AAAA;AAAA;ACPhC;;AAEE;;AAA+B;;AAAa;;AAAW;;AACzD;;;;AAFE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;;AACE;;AAAI;;AAAsC;;AAC1C;;AAAqD;;AAAe;;AACtE;;;;;;AAQU;;AAAsC;;AAAI;;;;;;AAC1C;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AACpC;;;;;;AAIA;;AAAsC;;AAAI;;;;;;AAC1C;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AACpC;;AAAsC;;AAAG;;;;AAAwB;;AAAI;;;;;;AAA5B;;AAAA;;;;;;AAIzC;;AAAsC;;AAAQ;;;;;;AAC9C;;AAAoC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AACpC;;;;;;AAIA;;;;;;;;AACA;;AACE;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAoB;;AAChC;;AACF;;;;;;AAJuC;;AAAA;;;;;;AAKvC;;;;;;AAGF;;;;;;AACA;;;;;;AACA;;;;;;AArCR;;AAEE;;AACE;;AAAgB;;AAAS;;AACzB;;AACE;;AACE;;AACE;;AACA;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAMA;;AACF;;AAEA;;AACA;;AACA;;AACF;;AACA;;AACE;;AAAiF;;AAAe;;AAChG;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA1CuB;;AAAA;;AA8BK;;AAAA;;AACc;;AAAA;;AACd;;AAAA;;;;UChCjBrC,c;AAMX,gCAAoBuC,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAHpB,eAAAM,gBAAA,GAA6B,CAAC,cAAD,EAAiB,MAAjB,EAAyB,UAAzB,EAAqC,MAArC,CAA7B;AACA,eAAAC,SAAA,GAAoB,CAApB;AAGC;;;;iBAED,oBAAW;AACT,iBAAKC,cAAL;AACA,iBAAKC,cAAL;AACD;AAED;;;;;;iBAGQ,0BAAc;AACpB,iBAAKC,MAAL,GAAc,KAAKV,WAAL,CAAiBC,QAAjB,EAAd;AACD;AAED;;;;;;iBAGQ,0BAAc;AAAA;;AACpB;AACA,iBAAKS,MAAL,CAAYR,SAAZ,CAAsB,YAAM;AAC1B,oBAAI,CAACK,SAAL,GAAiB,MAAI,CAACP,WAAL,CAAiBW,kBAAjB,EAAjB;AACD,aAFD;AAGD;AAED;;;;;;;iBAIA,oBAAWC,IAAX,EAAwB;AACtB,gBAAQ1D,EAAR,GAAe0D,IAAf,CAAQ1D,EAAR;AACA,iBAAK8C,WAAL,CAAiBa,UAAjB,CAA4B3D,EAA5B;AACD;;;;;;;yBAtCUO,c,EAAa,0H;AAAA,O;;;cAAbA,c;AAAa,iC;AAAA,gB;AAAA,e;AAAA,4sC;AAAA;AAAA;ADX1B;;AACA;;AACE;;;;;;AAIA;;;;AAgDF;;AACA;;;;;;;AArDQ;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEwCM;;AAAiF;;AACjF;;;;;;AADkD;;AAA+B;;AAAA;;;;;;AA4DrF;;AAAqD;;AACM;;AAAc;;AACzE;;;;;;AAF2D;;AAAA;;AACA;;AAAA;;;;;;AAK3D;;AAAqD;;;;AAAuC;;;;;;AAAvC;;AAAA;;;;UClGlDC,kB;AAKX,oCACUsC,WADV,EAEUc,SAFV,EAGUC,MAHV,EAGwB;AAAA;;AAFd,eAAAf,WAAA,GAAAA,WAAA;AACA,eAAAc,SAAA,GAAAA,SAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AALV,eAAAC,eAAA,GAA2B,4CAAAC,MAA3B;AAQC;;;;iBAED,oBAAW;AACT,iBAAKP,MAAL,GAAc,KAAKV,WAAL,CAAiBC,QAAjB,EAAd;AACD;AAED;;;;;;iBAGA,wBAAY;AACV,mBAAO,KAAKD,WAAL,CAAiBW,kBAAjB,EAAP;AACD;AAED;;;;;;iBAGA,oBAAW;AAAA;;AACT;AACA,iBAAKD,MAAL,CAAYQ,IAAZ,CAAiB,gDAAAC,KAAA,GAAjB,EAA0BjB,SAA1B,CAAoC,UAAAC,KAAK;AAAA,qBAAI,MAAI,CAACW,SAAL,CAAeM,QAAf,CAAwBjB,KAAxB,CAAJ;AAAA,aAAzC;AACA,iBAAKH,WAAL,CAAiBqB,KAAjB;AACA,iBAAKN,MAAL,CAAYO,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;;;;;;;yBAhCU5D,kB,EAAiB,0H,EAAA,iJ,EAAA,oH;AAAA,O;;;cAAjBA,kB;AAAiB,qC;AAAA,kB;AAAA,gB;AAAA,i6C;AAAA;AAAA;ADd9B;;AAEA;;AAEE;;AACE;;AACE;;AAAgB;;AAAQ;;AACxB;;AACE;;AAAI;;AAAe;;AAEnB;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACA;;AACE;;AAAW;;AAAQ;;AACnB;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACA;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAI;;AACf;;AACF;;AACA;;AACE;;AAAW;;AAAK;;AAChB;;AACE;;AAEF;;AACF;;AACA;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AACF;;AAEA;;AAAI;;AAAe;;AAEnB;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AAAyB;;AAAI;;AAC7B;;AAA+B;;AAAU;;AACzC;;AAAyB;;AAAgB;;AAC3C;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACF;;AACA;;AACE;;AAAW;;AAAkB;;AAC7B;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACF;;AACA;;AACE;;AAAW;;AAAG;;AACd;;AACF;;AACF;;AAEA;;AACE;;AAAsF;AAAA,qBAAS,IAAA0D,QAAA,EAAT;AAAmB,aAAnB;;AACpF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAGA;;AACE;;AACE;;AAAgB;;AAAI;;AACpB;;AACE;;AACE;;;;AAGA;;AAAe;;AAAG;;AAAK;;AAAI;;AAC7B;;AACA;;AACE;;;;AACA;;AACA;;AAAe;;AAAG;;;;AAA6B;;AAAI;;AACrD;;AACF;;AAEF;;AACF;;AAEF;;AAEA;;;;AA7E4C;;AAAA;;AA4DF;;AAAA;;AAMA;;AAAA;;AAEd;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElH5B;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AAAU;;AAAK;;AACf;;AAAM;;AAAK;;AACb;;;;;;;;AAEA;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AACjC;;AAAU;;AAAM;;AAChB;;AAAM;;AAAM;;AACd;;;;UCEarB,e;AAIX,iCAAoBwB,IAApB,EAA2C;AAAA;;AAAA;;AAAvB,eAAAA,IAAA,GAAAA,IAAA;AAClBA,cAAI,CAACC,IAAL,CAAUtB,SAAV,CAAoB,UAAAsB,IAAI,EAAI;AAC1B,kBAAI,CAACA,IAAL,GAAYA,IAAZ;;AAEA,gBAAIA,IAAJ,EAAU;AACR,kBAAQC,GAAR,GAAoCD,IAApC,CAAQC,GAAR;AAAA,kBAAaC,WAAb,GAAoCF,IAApC,CAAaE,WAAb;AAAA,kBAA0BC,KAA1B,GAAoCH,IAApC,CAA0BG,KAA1B;;AACA,uEAAmBF,GAAnB,EAAwB;AAAEC,2BAAW,EAAXA,WAAF;AAAeC,qBAAK,EAALA;AAAf,eAAxB;AACD;AACF,WAPD;AAQD;AAED;;;;;;;iBAGA,iBAAQ;AACN,iBAAKJ,IAAL,CAAUK,eAAV,CAA0B,IAAI,wEAAJ,EAA1B;AACD;AAED;;;;;;iBAGA,kBAAS;AACP,iBAAKL,IAAL,CAAUM,OAAV;AACD;;;;;;;yBA3BU9B,e,EAAc,gI;AAAA,O;;;cAAdA,e;AAAc,kC;AAAA,gB;AAAA,e;AAAA,iG;AAAA;AAAA;ADV3B;;AAKA;;;;AALS;;AAKA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJP;;AACE;;AACE;;AACA;;AACE;;AAAgB;;AAAiB;;AACjC;;AAAmB;;AAAG;;AAAkB;;AAAI;;AAAQ;;AAAE;;AAAQ;;AAAgB;;AAChF;;AACA;;AACE;;AAAG;;AAAuB;;AAC5B;;AACA;;AACE;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAW;;AACrF;;AACF;;AACF;;;;;;AAZ+B;;AAAA;;AAET;;AAAA;;AACM;;AAAA;;AAAwC;;AAAA;;AAG3D;;AAAA;;;;UCUEvC,kB;AAeX,oCACUwC,WADV,EAEU8B,aAFV,EAGUC,cAHV,EAIUC,QAJV,EAI+B;AAAA;;AAHrB,eAAAhC,WAAA,GAAAA,WAAA;AACA,eAAA8B,aAAA,GAAAA,aAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,QAAA,GAAAA,QAAA,CAAqB,CAjB/B;;AACQ,eAAAC,iBAAA,GAAmC;AACzC,uBAAW,CAD8B;AAEzC,kBAAM,CAFmC;AAGzC,kBAAM,CAHmC;AAIzC,kBAAM,CAJmC;AAKzC,kBAAM,CALmC;AAMzC,kBAAM;AANmC,WAAnC;AASR,eAAAC,UAAA,GAAa,KAAKD,iBAAL,CAAuB,SAAvB,CAAb;AACA,eAAAE,QAAA,GAAsB,EAAtB;AAOK;;;;iBAEL,oBAAW;AACT,iBAAKC,kBAAL;AACA,iBAAKC,gBAAL;AACD;AAED;;;;;;;;iBAKA,mBAAUC,OAAV,EAA4B;AAC1B,gBAAQpF,EAAR,GAAeoF,OAAf,CAAQpF,EAAR;AACA,iBAAK8C,WAAL,CAAiBuC,OAAjB,CAAyBrF,EAAzB;;AACA,gBAAGoF,OAAO,CAACpF,EAAR,IAAc,CAAjB,EAAoB;AAClB,mBAAK8E,QAAL,CAAcQ,IAAd,2BAAsCF,OAAO,CAACrE,KAA9C,sBAAsE,EAAtE,EAA0E;AAAEwE,wBAAQ,EAAE;AAAZ,eAA1E;;AACA,kBAAMC,eAAe,GAAG,sEAAxB;;AACA,kBAAMC,0BAA0B,GAAG,qEAA+B,IAA/B,CAAnC;;AACA,oEAAgB,YAAhB,EAA8B;AAC5BC,uBAAO,EAAE,WADmB;AAE5BC,6BAAa,EAAE,cAFa;AAG5BC,+BAAe,EAAE,GAHW;AAI5BC,8BAAc,EAAE,EAJY;AAK5BC,iCAAiB,EAAE,EALS;AAM5BC,6BAAa,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB;AANa,eAA9B;;AAQA,kEAAc,mBAAd;AAED,aAdD,MAcO;AACL,mBAAKjB,QAAL,CAAcQ,IAAd,iBAA4BF,OAAO,CAACrE,KAApC,oBAA0D,EAA1D,EAA8D;AAAEwE,wBAAQ,EAAE;AAAZ,eAA9D;AACD;AACF;AAED;;;;;;;iBAIQ,8BAAkB;AAAA;;AACxB,iBAAKX,aAAL,CAAmBoB,MAAnB,CAA0BhD,SAA1B,CAAoC,UAACiD,MAAD,EAAyB;AAC3D,kBAAMC,CAAC,GAAG,MAAI,CAACnB,iBAAL,CAAuBkB,MAAM,CAACE,OAA9B,CAAV;AACA,oBAAI,CAACnB,UAAL,GAAkBkB,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAY,MAAI,CAACnB,iBAAL,CAAuB,SAAvB,CAA9B;AACD,aAHD;AAID;AAED;;;;;;iBAGA,4BAAgB;AAAA;;AACd,iBAAKF,cAAL,CAAoBuB,WAApB,GAAkCpD,SAAlC,CAA4C,UAAAiC,QAAQ;AAAA,qBAAI,MAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,aAApD;AACD;;;;;;;yBAtEU3E,kB,EAAiB,0H,EAAA,gI,EAAA,6H,EAAA,qI;AAAA,O;;;cAAjBA,kB;AAAiB,qC;AAAA,gB;AAAA,e;AAAA,6Q;AAAA;AAAA;ADnB9B;;AACE;;AAeF;;;;AAhBoC;;AAAsB;;AACnB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEM1BG,kB;AAEX,sCAAc;AAAA;AAAG;;;;iBAEjB,oBAAW,CACV;;;;;;;yBALUA,kB;AAAiB,O;;;cAAjBA,kB;AAAiB,sC;AAAA,gB;AAAA,e;AAAA,0E;AAAA;AAAA;ACP9B;;AACE;;AAAI;;AAAyB;;AAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMO,UAAMsD,OAAM,GAAY,CAC7B;AAAEsC,YAAI,EAAE,SAAR;AAAmBC,oBAAY,EAAE;AAAjC,OAD6B,EAE7B;AAAED,YAAI,EAAE,QAAR;AAAkBC,oBAAY,EAAE;AAAhC,OAF6B,EAG7B;AAAED,YAAI,EAAE,gBAAR;AAA0BC,oBAAY,EAAE;AAAxC,OAH6B,EAI7B;AAAED,YAAI,EAAE,SAAR;AAAmBC,oBAAY,EAAE;AAAjC,OAJ6B,EAK7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OAL6B,EAM7B;AAAED,YAAI,EAAE,YAAR;AAAsBC,oBAAY,EAAE;AAApC,OAN6B,EAO7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OAP6B,EAQ7B;AAAED,YAAI,EAAE,aAAR;AAAuBC,oBAAY,EAAE;AAArC,OAR6B,EAS7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OAT6B,EAU7B;AAAED,YAAI,EAAE,sBAAR;AAAgCC,oBAAY,EAAE;AAA9C,OAV6B,EAW7B;AAAED,YAAI,EAAE,gCAAR;AAA0CC,oBAAY,EAAE;AAAxD,OAX6B,EAY7B;AAAED,YAAI,EAAE,SAAR;AAAmBC,oBAAY,EAAE;AAAjC,OAZ6B,EAa7B;AAAED,YAAI,EAAE,SAAR;AAAmBC,oBAAY,EAAE;AAAjC,OAb6B,EAc7B;AAAED,YAAI,EAAE,MAAR;AAAgBC,oBAAY,EAAE;AAA9B,OAd6B,EAe7B;AAAED,YAAI,EAAE,QAAR;AAAkBC,oBAAY,EAAE;AAAhC,OAf6B,EAgB7B;AAAED,YAAI,EAAE,OAAR;AAAiBC,oBAAY,EAAE;AAA/B,OAhB6B,EAiB7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OAjB6B,EAkB7B;AAAED,YAAI,EAAE,SAAR;AAAmBC,oBAAY,EAAE;AAAjC,OAlB6B,EAmB7B;AAAED,YAAI,EAAE,MAAR;AAAgBC,oBAAY,EAAE;AAA9B,OAnB6B,EAoB7B;AAAED,YAAI,EAAE,QAAR;AAAkBC,oBAAY,EAAE;AAAhC,OApB6B,EAqB7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OArB6B,EAsB7B;AAAED,YAAI,EAAE,WAAR;AAAqBC,oBAAY,EAAE;AAAnC,OAtB6B,EAuB7B;AAAED,YAAI,EAAE,OAAR;AAAiBC,oBAAY,EAAE;AAA/B,OAvB6B,EAwB7B;AAAED,YAAI,EAAE,kBAAR;AAA4BC,oBAAY,EAAE;AAA1C,OAxB6B,EAyB7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OAzB6B,EA0B7B;AAAED,YAAI,EAAE,eAAR;AAAyBC,oBAAY,EAAE;AAAvC,OA1B6B,EA2B7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OA3B6B,EA4B7B;AAAED,YAAI,EAAE,WAAR;AAAqBC,oBAAY,EAAE;AAAnC,OA5B6B,EA6B7B;AAAED,YAAI,EAAE,aAAR;AAAuBC,oBAAY,EAAE;AAArC,OA7B6B,EA8B7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OA9B6B,EA+B7B;AAAED,YAAI,EAAE,SAAR;AAAmBC,oBAAY,EAAE;AAAjC,OA/B6B,EAgC7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OAhC6B,EAiC7B;AAAED,YAAI,EAAE,QAAR;AAAkBC,oBAAY,EAAE;AAAhC,OAjC6B,EAkC7B;AAAED,YAAI,EAAE,eAAR;AAAyBC,oBAAY,EAAE;AAAvC,OAlC6B,EAmC7B;AAAED,YAAI,EAAE,YAAR;AAAsBC,oBAAY,EAAE;AAApC,OAnC6B,EAoC7B;AAAED,YAAI,EAAE,YAAR;AAAsBC,oBAAY,EAAE;AAApC,OApC6B,EAqC7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OArC6B,EAsC7B;AAAED,YAAI,EAAE,gBAAR;AAA0BC,oBAAY,EAAE;AAAxC,OAtC6B,EAuC7B;AAAED,YAAI,EAAE,cAAR;AAAwBC,oBAAY,EAAE;AAAtC,OAvC6B,EAwC7B;AAAED,YAAI,EAAE,0BAAR;AAAoCC,oBAAY,EAAE;AAAlD,OAxC6B,EAyC7B;AAAED,YAAI,EAAE,MAAR;AAAgBC,oBAAY,EAAE;AAA9B,OAzC6B,EA0C7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OA1C6B,EA2C7B;AAAED,YAAI,EAAE,QAAR;AAAkBC,oBAAY,EAAE;AAAhC,OA3C6B,EA4C7B;AAAED,YAAI,EAAE,OAAR;AAAiBC,oBAAY,EAAE;AAA/B,OA5C6B,EA6C7B;AAAED,YAAI,EAAE,cAAR;AAAwBC,oBAAY,EAAE;AAAtC,OA7C6B,EA8C7B;AAAED,YAAI,EAAE,aAAR;AAAuBC,oBAAY,EAAE;AAArC,OA9C6B,EA+C7B;AAAED,YAAI,EAAE,cAAR;AAAwBC,oBAAY,EAAE;AAAtC,OA/C6B,EAgD7B;AAAED,YAAI,EAAE,gBAAR;AAA0BC,oBAAY,EAAE;AAAxC,OAhD6B,EAiD7B;AAAED,YAAI,EAAE,cAAR;AAAwBC,oBAAY,EAAE;AAAtC,OAjD6B,EAkD7B;AAAED,YAAI,EAAE,WAAR;AAAqBC,oBAAY,EAAE;AAAnC,OAlD6B,EAmD7B;AAAED,YAAI,EAAE,OAAR;AAAiBC,oBAAY,EAAE;AAA/B,OAnD6B,EAoD7B;AAAED,YAAI,EAAE,MAAR;AAAgBC,oBAAY,EAAE;AAA9B,OApD6B,EAqD7B;AAAED,YAAI,EAAE,SAAR;AAAmBC,oBAAY,EAAE;AAAjC,OArD6B,EAsD7B;AAAED,YAAI,EAAE,gBAAR;AAA0BC,oBAAY,EAAE;AAAxC,OAtD6B,EAuD7B;AAAED,YAAI,EAAE,UAAR;AAAoBC,oBAAY,EAAE;AAAlC,OAvD6B,EAwD7B;AAAED,YAAI,EAAE,YAAR;AAAsBC,oBAAY,EAAE;AAApC,OAxD6B,EAyD7B;AAAED,YAAI,EAAE,eAAR;AAAyBC,oBAAY,EAAE;AAAvC,OAzD6B,EA0D7B;AAAED,YAAI,EAAE,WAAR;AAAqBC,oBAAY,EAAE;AAAnC,OA1D6B,EA2D7B;AAAED,YAAI,EAAE,SAAR;AAAmBC,oBAAY,EAAE;AAAjC,OA3D6B,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCMnF,Y;AAKX,8BAAoByC,SAApB,EACUiB,cADV,EAC0C;AAAA;;AADtB,eAAAjB,SAAA,GAAAA,SAAA;AACV,eAAAiB,cAAA,GAAAA,cAAA;AAJF,eAAA5B,KAAA,GAAmB,EAAnB;AACA,eAAAsD,OAAA,GAAU,IAAI,kCAAAC,aAAJ,EAAV;AAKP;AAED;;;;;;;;;;iBAMA,iBAAQC,SAAR,EAAyB;AAAA;;AACvB;AACA,gBAAM/C,IAAI,GAAG,KAAKT,KAAL,CAAWyD,IAAX,CAAgB,UAAAtB,OAAO;AAAA,qBAAIA,OAAO,CAACpF,EAAR,KAAeyG,SAAnB;AAAA,aAAvB,CAAb;;AAEA,gBAAI/C,IAAJ,EAAU;AACR;AACA,kBAAQiD,QAAR,GAAqBjD,IAArB,CAAQiD,QAAR;AACAjD,kBAAI,CAACiD,QAAL,IAAiBA,QAAjB;AAEA,mBAAKJ,OAAL,CAAaK,IAAb,CAAkB,KAAK3D,KAAvB,EALQ,CAOR;;AACA,mBAAKW,SAAL,CAAeiD,SAAf,CAAyBnD,IAAzB,EAA+B,KAAKT,KAApC;AACD,aATD,MASO;AACL;AACA,mBAAK4B,cAAL,CAAoBiC,UAApB,CAA+BL,SAA/B,EAA0CzD,SAA1C,CAAoD,UAAAoC,OAAO,EAAI;AAC7D,oBAAM1B,IAAI,mCACL0B,OADK,GACE;AACVuB,0BAAQ,EAAE,CADA,CACE;;AADF,iBADF,CAAV,CAD6D,CAM7D;;AACA,sBAAI,CAAC1D,KAAL,CAAW8D,IAAX,CAAgBrD,IAAhB;;AACA,sBAAI,CAAC6C,OAAL,CAAaK,IAAb,CAAkB,MAAI,CAAC3D,KAAvB,EAR6D,CAU7D;;;AACA,sBAAI,CAACW,SAAL,CAAeiD,SAAf,CAAyBnD,IAAzB,EAA+B,MAAI,CAACT,KAApC;AACD,eAZD;AAaD;AACF;AAED;;;;;;iBAGA,8BAAkB;AAChB,mBAAO,KAAKA,KAAL,CAAW+D,MAAX,CAAkB,UAACC,GAAD,EAAcvD,IAAd;AAAA,qBAAgCuD,GAAG,IAAIvD,IAAI,CAACwD,KAAL,GAAaxD,IAAI,CAACiD,QAAzD;AAAA,aAAlB,EAAqF,CAArF,CAAP;AACD;AAED;;;;;;iBAGA,iBAAQ;AACN,iBAAK1D,KAAL,GAAa,EAAb;AACA,iBAAKsD,OAAL,CAAaK,IAAb,CAAkB,KAAK3D,KAAvB;AACD;AAED;;;;;;;;iBAKA,oBAAQ;AACN,mBAAO,KAAKsD,OAAZ;AACD;AAED;;;;;;;iBAIA,oBAAWE,SAAX,EAA4B;AAC1B;AACA,gBAAMU,KAAK,GAAG,KAAKlE,KAAL,CAAWmE,SAAX,CAAqB,UAAAhC,OAAO;AAAA,qBAAIA,OAAO,CAACpF,EAAR,KAAeyG,SAAnB;AAAA,aAA5B,CAAd;;AAEA,gBAAIU,KAAK,IAAI,CAAb,EAAgB;AACd,kBAAMzD,IAAI,GAAG,KAAKT,KAAL,CAAWkE,KAAX,CAAb,CADc,CAGd;;AACA,mBAAKlE,KAAL,CAAWoE,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACA,mBAAKZ,OAAL,CAAaK,IAAb,CAAkB,KAAK3D,KAAvB,EALc,CAOd;;AACA,mBAAKW,SAAL,CAAe0D,cAAf,CAA8B5D,IAA9B,EAAoC,KAAKT,KAAzC;AACD;AACF;;;;;;;yBAzFU9B,Y,EAAW,wH,EAAA,oH;AAAA,O;;;eAAXA,Y;AAAW,iBAAXA,YAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGDoG,iB;AAEX,mCAAoBC,SAApB,EAAqD;AAAA;;AAAjC,eAAAA,SAAA,GAAAA,SAAA;AAAoC;AAExD;;;;;;;;;iBAKA,mBAAUpC,OAAV,EAA4BnC,KAA5B,EAA8C;AAAA;;AAC5C;AACA,iBAAKuE,SAAL,CAAeC,QAAf,CAAwB,gFAAxB,EAA0ErC,OAA1E,EAF4C,CAI5C;;AACAsC,kBAAM,CAACC,MAAP,CAAgBC,MAAc,CAACC,IAAf,CAAoBC,IAApC,EAA2C,KAAKC,WAAL,CAAiB3C,OAAjB,EAA0BnC,KAA1B,EAAiC,UAAjC,CAA3C,EAL4C,CAO5C;;AACA,gBAAM+E,WAAW,GAAGJ,MAAM,CAAC,aAAD,CAA1B;AACCI,uBAAW,CAACC,IAAZ,CAA0BvE,IAA1B,GAAiCT,KAAK,CAACiF,GAAN,CAAU,UAAAxE,IAAI;AAAA,qBAAI,MAAI,CAACyE,gBAAL,CAAsBzE,IAAtB,CAAJ;AAAA,aAAd,CAAjC;AACAsE,uBAAW,CAACC,IAAZ,CAA0Bf,KAA1B,GAAkC,KAAKkB,mBAAL,CAA0BJ,WAAW,CAACC,IAAZ,CAA0BvE,IAApD,CAAlC;AACF;AAED;;;;;;;;iBAKA,wBAAe0B,OAAf,EAAiCnC,KAAjC,EAAmD;AAAA;;AACjD;AACA,iBAAKuE,SAAL,CAAeC,QAAf,CAAwB,qFAAxB,EAA+ErC,OAA/E,EAFiD,CAIjD;;AACAsC,kBAAM,CAACC,MAAP,CAAgBC,MAAc,CAACC,IAAf,CAAoBC,IAApC,EAA2C,KAAKC,WAAL,CAAiB3C,OAAjB,EAA0BnC,KAA1B,EAAiC,aAAjC,CAA3C,EALiD,CAOjD;;AACA,gBAAM+E,WAAW,GAAGJ,MAAM,CAAC,aAAD,CAA1B;AACCI,uBAAW,CAACC,IAAZ,CAA0BvE,IAA1B,GAAiCT,KAAK,CAACiF,GAAN,CAAU,UAAAxE,IAAI;AAAA,qBAAI,MAAI,CAACyE,gBAAL,CAAsBzE,IAAtB,CAAJ;AAAA,aAAd,CAAjC;AACAsE,uBAAW,CAACC,IAAZ,CAA0Bf,KAA1B,GAAkC,KAAKkB,mBAAL,CAA0BJ,WAAW,CAACC,IAAZ,CAA0BvE,IAApD,CAAlC;AACF;AAED;;;;;;;iBAIA,kBAAST,KAAT,EAA2B;AACzB;AACA,iBAAKuE,SAAL,CAAeC,QAAf,CAAwB,6EAAxB,EAAuE;AAAExE,mBAAK,EAALA;AAAF,aAAvE,EAFyB,CAIzB;;AACAyE,kBAAM,CAACC,MAAP,CAAgBC,MAAc,CAACC,IAAf,CAAoBC,IAApC,EAA2C,KAAKO,eAAL,CAAqBpF,KAArB,CAA3C;AACD;AAED;;;;;;;;;iBAMQ,qBAAYmC,OAAZ,EAA8BnC,KAA9B,EAAgDqF,YAAhD,EAAwF;AAC9F;AACA,mBAAO;AACLC,6BAAe,EAAEtF,KAAK,CAACiF,GAAN,CAAU,UAACxE,IAAD;AAAA,uBAAmBA,IAAI,CAAC1D,EAAL,CAAQwI,QAAR,EAAnB;AAAA,eAAV,CADZ;AAELC,gCAAkB,EAAExF,KAAK,CAACiF,GAAN,CAAU,UAACxE,IAAD;AAAA,uBAAmBA,IAAI,CAACwD,KAAL,CAAWsB,QAAX,EAAnB;AAAA,eAAV,CAFf;AAGLE,mCAAqB,EAAEzF,KAAK,CAACiF,GAAN,CAAU,UAACxE,IAAD;AAAA,uBAAmBA,IAAI,CAACiD,QAAL,CAAc6B,QAAd,EAAnB;AAAA,eAAV,CAHlB;AAILG,wBAAU,EAAE,CAACvD,OAAO,CAACpF,EAAT,CAJP;AAKL4I,+BAAiB,EAAE,CAACxD,OAAO,CAACyD,KAAT,CALd;AAMLC,0BAAY,EAAE,CAAC1D,OAAO,CAACrE,KAAT,CANT;AAOLgI,oCAAsB,EAAE,CAAC3D,OAAO,CAAC8B,KAAT,CAPnB;AAQL8B,2BAAa,EAAE,CAAC5D,OAAO,CAAC8B,KAAT,CARV;AASL+B,8BAAgB,EAAE,CAAC7D,OAAO,CAACuB,QAAR,CAAiB6B,QAAjB,EAAD,CATb;AAULU,2BAAa,EAAEZ;AAVV,aAAP;AAYD;AAED;;;;;;;iBAIQ,yBAAgBrF,KAAhB,EAAgC;AACtC,mBAAO;AACLkG,8BAAgB,EAAElG,KAAK,CAACE,MAAN,CAAaqF,QAAb,EADb;AAELY,8BAAgB,EAAEnG,KAAK,CAAC+D,MAAN,CAAa,UAACqC,GAAD,EAAc3F,IAAd;AAAA,uBAAgC2F,GAAG,IAAK3F,IAAI,CAACwD,KAAL,GAAaxD,IAAI,CAACiD,QAAnB,GAA+B,IAAtE;AAAA,eAAb,EAAyF,CAAzF,CAFb;AAGL2C,iCAAmB,EAAE,KAHhB;AAILC,mCAAqB,EAAE,MAJlB;AAKLC,sBAAQ,EAAEC,IAAI,CAACC,GAAL,GAAWlB,QAAX,EALL;AAMLmB,gCAAkB,EAAE,MANf;AAOLC,8BAAgB,EAAE,EAPb;AAQLC,mCAAqB,YAAK5G,KAAK,CAACE,MAAX,QARhB;AASL2G,iCAAmB,EAAE,KAThB;AAULC,4BAAc,EAAE9G,KAAK,CAAC+D,MAAN,CAAa,UAACqC,GAAD,EAAc3F,IAAd;AAAA,uBAAgC2F,GAAG,IAAI3F,IAAI,CAACwD,KAAL,GAAaxD,IAAI,CAACiD,QAAzD;AAAA,eAAb,EAAgF,CAAhF,CAVX;AAWLqD,8BAAgB,EAAE/G,KAAK,CAAC+D,MAAN,CAAa,UAACqC,GAAD,EAAc3F,IAAd;AAAA,uBAAgC2F,GAAG,IAAK3F,IAAI,CAACwD,KAAL,GAAaxD,IAAI,CAACiD,QAAnB,GAA+B,IAAtE;AAAA,eAAb,EAAyF,CAAzF,CAXb;AAYLsD,yBAAW,EAAEhH,KAAK,CAAC+D,MAAN,CAAa,UAACqC,GAAD,EAAc3F,IAAd;AAAA,uBAAgC2F,GAAG,IAAK3F,IAAI,CAACwD,KAAL,GAAaxD,IAAI,CAACiD,QAAnB,GAA+B,IAAtE;AAAA,eAAb,EAAyF,CAAzF,CAZR;AAaLuD,uBAAS,EAAE,gCAbN;AAcLC,uBAAS,EAAE,OAdN;AAeLxB,wBAAU,EAAE1F,KAAK,CAACiF,GAAN,CAAU,UAAAxE,IAAI;AAAA,uBAAIA,IAAI,CAAC1D,EAAL,CAAQwI,QAAR,EAAJ;AAAA,eAAd,CAfP;AAgBLI,+BAAiB,EAAE3F,KAAK,CAACiF,GAAN,CAAU,UAAAxE,IAAI;AAAA,uBAAIA,IAAI,CAACmF,KAAT;AAAA,eAAd,CAhBd;AAiBLC,0BAAY,EAAE7F,KAAK,CAACiF,GAAN,CAAU,UAAAxE,IAAI;AAAA,uBAAIA,IAAI,CAAC3C,KAAT;AAAA,eAAd,CAjBT;AAkBLgI,oCAAsB,EAAE9F,KAAK,CAACiF,GAAN,CAAU,UAAAxE,IAAI;AAAA,uBAAIA,IAAI,CAACwD,KAAL,CAAWsB,QAAX,EAAJ;AAAA,eAAd,CAlBnB;AAmBLQ,2BAAa,EAAE/F,KAAK,CAACiF,GAAN,CAAU,UAAAxE,IAAI;AAAA,uBAAIA,IAAI,CAACwD,KAAL,CAAWsB,QAAX,EAAJ;AAAA,eAAd,CAnBV;AAoBLS,8BAAgB,EAAEhG,KAAK,CAACiF,GAAN,CAAU,UAAAxE,IAAI;AAAA,uBAAIA,IAAI,CAACiD,QAAL,CAAc6B,QAAd,EAAJ;AAAA,eAAd,CApBb;AAqBLU,2BAAa,EAAE;AArBV,aAAP;AAuBD;AAED;;;;;;;iBAIA,oBAAWxF,IAAX,EAAwB;AACtB,mBAAO;AACL0G,uBAAS,EAAE1G,IAAI,CAACwD,KADX;AAELmD,sBAAQ,EAAE,KAFL;AAGLC,qBAAO,EAAE,IAHJ;AAILC,sBAAQ,EAAE,IAJL;AAKLC,4BAAc,EAAE,YALX;AAMLC,0BAAY,EAAE/G,IAAI,CAACwD,KAAL,GAAa,IANtB;AAOLwD,yBAAW,EAAE,EAPR;AAQLC,6BAAe,EAAE;AARZ,aAAP;AAUD;AAED;;;;;;;iBAIA,0BAAiBvF,OAAjB,EAAiC;AAC/B,mBAAO;AACLwF,uBAAS,EAAExF,OAAO,CAACpF,EAAR,CAAWwI,QAAX,EADN;AAELqC,yBAAW,EAAEzF,OAAO,CAACrE,KAFhB;AAGL+J,yBAAW,EAAE1F,OAAO,CAAC0F,WAHhB;AAILC,0BAAY,EAAE3F,OAAO,CAACyD,KAJjB;AAKLmC,wBAAU,EAAEC,QAAQ,CAACC,IALhB;AAMLC,8BAAgB,EAAE/F,OAAO,CAACyD,KANrB;AAOLuC,0BAAY,EAAE,aAPT;AAQLC,iBAAG,EAAEjG,OAAO,CAACpF,EAAR,CAAWwI,QAAX,EARA;AASL8C,mBAAK,EAAE,KATF;AAULC,kBAAI,EAAE;AAVD,aAAP;AAYD;AAED;;;;;;;iBAIA,0BAAiB7H,IAAjB,EAA8B;AAC5B,mBAAO;AACL8H,yBAAW,EAAE,KAAKC,gBAAL,CAAsB/H,IAAtB,CADR;AAELgI,sBAAQ,EAAE;AACRC,+BAAe,EAAE;AADT,eAFL;AAKLhF,sBAAQ,EAAEjD,IAAI,CAACiD,QALV;AAMLO,mBAAK,EAAE,KAAK0E,UAAL,CAAgBlI,IAAhB,CANF;AAOLmI,2BAAa,EAAE,EAPV;AAQLC,wBAAU,EAAE;AARP,aAAP;AAUD;AAED;;;;;;;iBAIA,6BAAoB7I,KAApB,EAAwC;AACtC,mBAAO;AACLmH,uBAAS,EAAEnH,KAAK,CAAC+D,MAAN,CAAa,UAACE,KAAD,EAAgBxD,IAAhB;AAAA,uBAAsCwD,KAAK,IAAIxD,IAAI,CAACwD,KAAL,CAAWkD,SAAX,GAAuB1G,IAAI,CAACiD,QAA3E;AAAA,eAAb,EAAkG,CAAlG,CADN;AAEL+D,yBAAW,EAAE,EAFR;AAGLC,6BAAe,EAAE,IAHZ;AAILN,sBAAQ,EAAE,KAJL;AAKLC,qBAAO,EAAE,IALJ;AAMLC,sBAAQ,EAAEtH,KAAK,CAAC+D,MAAN,CAAa,UAACE,KAAD,EAAgBxD,IAAhB;AAAA,uBAAsCwD,KAAK,IAAIxD,IAAI,CAACwD,KAAL,CAAWqD,QAA1D;AAAA,eAAb,EAAiF,CAAjF,CANL;AAOLC,4BAAc,EAAE,YAPX;AAQLC,0BAAY,EAAExH,KAAK,CAAC+D,MAAN,CAAa,UAACE,KAAD,EAAgBxD,IAAhB;AAAA,uBAAsCwD,KAAK,IAAIxD,IAAI,CAACwD,KAAL,CAAWuD,YAAX,GAA0B/G,IAAI,CAACiD,QAA9E;AAAA,eAAb,EAAqG,CAArG,CART;AASLoF,uBAAS,EAAE9I,KAAK,CAAC+D,MAAN,CAAa,UAACE,KAAD,EAAgBxD,IAAhB;AAAA,uBAAsCwD,KAAK,IAAKxD,IAAI,CAACwD,KAAL,CAAWuD,YAAX,GAA0B/G,IAAI,CAACiD,QAAhC,GAA4CjD,IAAI,CAACwD,KAAL,CAAWqD,QAAtG;AAAA,eAAb,EAA6H,CAA7H;AATN,aAAP;AAWD;;;;;;;yBA7KUhD,iB,EAAgB,iI;AAAA,O;;;eAAhBA,iB;AAAgB,iBAAhBA,iBAAgB,K;AAAA,oBAFf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKDnG,e;AAKX,iCACU4K,SADV,EAEUC,IAFV,EAGUC,QAHV,EAG+B;AAAA;;AAFrB,eAAAF,SAAA,GAAAA,SAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AAND,eAAAC,QAAA,GAAW,4CAAX,CAMsB,CANmC;AAQhE;;AACA,eAAKC,MAAL,GAAc,uDAAA5K,WAAA,wBAA4B,uDAAAA,WAAA,aAA5B,gCACT,uDAAAA,WAAA,cADS,cAAd;AAED;AAED;;;;;;;;iBAIA,oBAAWxB,EAAX,EAAqB;AAAA;;AACnB;AACA,gBAAI,uDAAAwB,WAAA,WAAJ,EAA4B;AAC1B,qBAAO,KAAK4E,WAAL,GAAmBpC,IAAnB,CACL,gDAAAkE,GAAA,EAAI,UAAAjD,QAAQ;AAAA,uBAAIA,QAAQ,CAACyB,IAAT,CAAc,UAAAtB,OAAO;AAAA,yBAAIA,OAAO,CAACpF,EAAR,KAAeA,EAAnB;AAAA,iBAArB,CAAJ;AAAA,eAAZ,CADK,EACyD;AAC9D,8DAAAqM,UAAA,EAAW,KAAKC,WAAL,CAA0B,YAA1B,EAAwC,IAAxC,CAAX,CAFK,CAAP;AAID,aALD,MAKO;AACL,kBAAMC,GAAG,aAAM,KAAKH,MAAX,cAAqBpM,EAArB,CAAT;AAEA,qBAAO,KAAKiM,IAAL,CAAUO,GAAV,CAAuBD,GAAvB,EAA4BvI,IAA5B,CACL,gDAAAkE,GAAA,EAAI,UAAA9C,OAAO;AAAA,uBAAI,OAAI,CAACqH,WAAL,CAAiBrH,OAAjB,CAAJ;AAAA,eAAX,CADK,EAEL,gDAAAiH,UAAA,EAAW,KAAKC,WAAL,CAA0B,YAA1B,EAAwC,IAAxC,CAAX,CAFK,CAAP;AAID;AACF;AAED;;;;;;;iBAIA,qBAAYI,KAAZ,EAA0B;AAAA;;AACxB;AACA,gBAAMH,GAAG,GAAGG,KAAK,aAAM,KAAKN,MAAX,gBAAuBM,KAAvB,IAAiC,KAAKN,MAAvD;AAEA,mBAAO,KAAKH,IAAL,CAAUO,GAAV,CAAyBD,GAAzB,EAA8BvI,IAA9B,CACL,gDAAAkE,GAAA,EAAI,UAAAjD,QAAQ;AAAA,qBAAIA,QAAQ,CAACiD,GAAT,CAAa,UAAA9C,OAAO;AAAA,uBAAI,OAAI,CAACqH,WAAL,CAAiBrH,OAAjB,CAAJ;AAAA,eAApB,CAAJ;AAAA,aAAZ,CADK,EAEL,gDAAAiH,UAAA,EAAW,KAAKC,WAAL,CAA4B,aAA5B,EAA2C,EAA3C,CAAX,CAFK,CAAP;AAID;AAED;;;;;;;;iBAKQ,uBAAoD;AAAA;;AAAA,gBAArCK,SAAqC,uEAAzB,WAAyB;AAAA,gBAAZC,MAAY;AAC1D,mBAAO,UAACC,KAAD,EAAiC;AACtC,kBAAQC,OAAR,GAAoBD,KAApB,CAAQC,OAAR;AAEAC,qBAAO,CAACF,KAAR,WAAiBF,SAAjB,sBAAsCG,OAAtC;;AACA,qBAAI,CAACZ,QAAL,CAAc5G,IAAd,qCAAgDwH,OAAhD,GAA2D,IAA3D;;AAEA,qBAAO,sCAAAE,EAAA,EAAGJ,MAAH,CAAP;AACD,aAPD;AAQD;AAED;;;;;;;;;;iBAOQ,qBAAYxH,OAAZ,EAA4B;AAClC,gBAAMyD,KAAN,GAAgBzD,OAAhB,CAAMyD,KAAN;AACAA,iBAAK,aAAM,KAAKsD,QAAX,cAAuBtD,KAAvB,CAAL,CAFkC,CAIlC;;AACA,iBAAKmD,SAAL,CAAeiB,wBAAf,CAAwCpE,KAAxC,EALkC,CAKc;;AAEhD,mBAAO,MAAP,OAAO,CAAP,kBACKzD,OADL,CAAO,EACK;AACVyD,mBAAK,EAALA;AADU,aADL,CAAP;AAID;;;;;;;yBApFUzH,e,EAAc,2H,EAAA,oH,EAAA,4H;AAAA,O;;;eAAdA,e;AAAc,iBAAdA,eAAc,K;AAAA,oBAFb;;;;;;;;;;;;;;;;;;;;;;;UCXd;AACA;AACA;;AAEA;;;;;;;;;AAOO,UAAMI,YAAW,GAAG;AACzB0L,kBAAU,EAAE,KADa;AAEzBC,oBAAY,EAAE,SAFW;AAGzBC,qBAAa,EAAE,2BAHU;AAIzBC,kBAAU,EAAE,IAJa;AAKzBrM,aAAK,EAAE,QALkB;AAMzBsM,gBAAQ,EAAE,CACR;AADQ;AANe,OAApB;AAWP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA,UAAI,uDAAA9L,WAAA,WAAJ,EAA4B;AAC1B,uDAAA+L,cAAA;AACD;;AAED,6DAAAC,eAAA,GAAyBC,eAAzB,CAAyC,6CAAAvM,SAAzC,WACS,UAAAwM,GAAG;AAAA,eAAIX,OAAO,CAACF,KAAR,CAAca,GAAd,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartComponent, CheckoutComponent, ProductsComponent, ThankYouComponent } from './components';\n\n\nconst routes: Routes = [\n  { path: '', component: ProductsComponent },\n  { path: 'cart', component: CartComponent },\n  { path: 'checkout', component: CheckoutComponent },\n  { path: 'products', component: ProductsComponent },\n  { path: 'thankyou', component: ThankYouComponent },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport * as FullStory from '@fullstory/browser';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Angular Shoppe';\n\n  constructor() {\n    //const { orgId } = environment;\n\n    // load the FullStory recording snippet if an orgId is set\n    // if (orgId) {\n    //   FullStory.init({ orgId, debug: false });\n    // }\n    FullStory.init({ orgId: '173V6P',\n      devMode: true });\n  }\n}\n","<mat-toolbar>\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Navigation menu\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <a routerLink=\"/products\" class=\"toolbar-title\">{{ title | uppercase }}</a>\n  <span class=\"toolbar-spacer\"></span>\n  <app-cart-button></app-cart-button>\n  <mat-menu #menu=\"matMenu\">\n    <app-login></app-login>\n  </mat-menu>\n</mat-toolbar>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAnalyticsModule, ScreenTrackingService } from '@angular/fire/analytics';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { environment } from 'src/environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CartComponent, CartButtonComponent, CheckoutComponent, ProductsComponent, ThankYouComponent } from './components';\nimport { CartService, ProductService } from './services';\nimport { LoginComponent } from './components/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CartComponent,\n    CartButtonComponent,\n    CheckoutComponent,\n    ProductsComponent,\n    ThankYouComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAnalyticsModule,\n    AngularFireAuthModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n  providers: [\n    CartService,\n    ProductService,\n    ScreenTrackingService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../../services';\n\n@Component({\n  selector: 'app-cart-button',\n  templateUrl: 'cart-button.component.html',\n})\nexport class CartButtonComponent implements OnInit {\n  cartBadge: number;\n\n  constructor(private cartService: CartService) {\n\n  }\n\n  ngOnInit(): void {\n    this.cartService.getItems().subscribe(items => this.cartBadge = items.length);\n  }\n}\n","<a routerLink=\"/cart\" mat-flat-button color=\"primary\" routerLink=\"cart\" aria-label=\"Shopping Cart\"\n  matBadge=\"{{cartBadge}}\" matBadgePosition=\"above after\" matBadgeColor=\"accent\">\n  <mat-icon class=\"toolbar-icon\">shopping_cart</mat-icon>My Cart\n</a>","<div fxFlex.lt-md=\"5\" fxFlex.gt-sm=\"20\"></div>\n<div fxFlex class=\"shopping-cart\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n  <div *ngIf=\"!(items$ | async) || (items$ | async)?.length == 0\" class=\"empty-cart\">\n    <h3>Alas, there are no items in your cart.</h3>\n    <a mat-button color=\"primary\" routerLink=\"/products\">Keep shoppe-ing</a>\n  </div>\n  <div *ngIf=\"(items$ | async)?.length > 0\">\n\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-title>Your cart</mat-card-title>\n      <mat-card-content fxLayout=\"column\">\n        <table mat-table [dataSource]=\"items$\">\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let item\">{{item.title}}</td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"cost\">\n            <th mat-header-cell *matHeaderCellDef>Cost</th>\n            <td mat-cell *matCellDef=\"let item\">{{item.price}}</td>\n            <td mat-footer-cell *matFooterCellDef><b>{{totalCost | currency}}</b></td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef>Quantity</th>\n            <td mat-cell *matCellDef=\"let item\">{{item.quantity}}</td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"removeAction\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let item\">\n              <button mat-icon-button color=\"warn\" matTooltip=\"Remove {{item.title }} from your cart\"\n                (click)=\"removeItem(item)\">\n                <mat-icon>remove_shopping_cart</mat-icon>\n              </button>\n            </td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let item; columns: displayedColumns;\"></tr>\n          <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n        </table>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n          <a class=\"link-button\" routerLink=\"/products\" mat-stroked-button color=\"primary\">Keep Shoppe-ing</a>\n          <a class=\"link-button\" routerLink=\"/checkout\" mat-flat-button color=\"primary\" aria-label=\"Checkout\">\n            Continue to Checkout\n          </a>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n<div fxFlex.lt-md=\"5\" fxFlex.gt-sm=\"20\"></div>","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services';\nimport { Product } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport * as FullStory from '@fullstory/browser';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n  items$: Observable<Product[]>;\n  displayedColumns: string[] = ['removeAction', 'name', 'quantity', 'cost'];\n  totalCost: number = 0;\n\n  constructor(private cartService: CartService) {\n  }\n\n  ngOnInit() {\n    this.initDataSource();\n    this.initCalculator();\n  }\n\n  /**\n   * Initialize the MatTable's datasource.\n   */\n  private initDataSource(): void {\n    this.items$ = this.cartService.getItems();\n  }\n\n  /**\n   * Based on items in the cart, calculate things (e.g. totals, quantities, etc).\n   */\n  private initCalculator(): void {\n    // add an observer to the cart's items and compute the total cost\n    this.items$.subscribe(() => {\n      this.totalCost = this.cartService.calculateTotalCost();\n    });\n  }\n\n  /**\n   * Removes an item from the cart entirely.\n   * @param item the Product item to be removed\n   */\n  removeItem(item: Product): void {\n    const { id } = item;\n    this.cartService.removeItem(id);\n  }\n\n}\n","<div fxFlex.gt-md=\"10\" fxFlex.lt-md=\"5\"></div>\n<!-- begin main content -->\n<div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxFlex>\n  <!-- begin order form -->\n  <div fxLayout=\"column\" fxFlex.gt-sm=\"80\">\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-title>Checkout</mat-card-title>\n      <mat-card-content>\n        <h3>Billing Address</h3>\n\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Firstname</mat-label>\n            <input id=\"firstname\" type=\"text\" matInput>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Lastname</mat-label>\n            <input id=\"lastname\" type=\"text\" matInput>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input id=\"email\" type=\"email\" matInput>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Address</mat-label>\n            <input id=\"address\" type=\"text\" matInput class=\"fs-exclude\">\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Address 2</mat-label>\n            <input id=\"address2\" type=\"text\" matInput class=\"fs-exclude\">\n          </mat-form-field>\n        </div>\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>City</mat-label>\n            <input id=\"city\" type=\"text\" matInput>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>State</mat-label>\n            <mat-select id=\"state\">\n              <mat-option *ngFor=\"let state of shippableStates\" value=\"{{state.abbreviation}}\">{{state.name}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Zip</mat-label>\n            <input id=\"zipcode\" type=\"number\" minlength=\"5\" maxlength=\"5\" matInput>\n          </mat-form-field>\n        </div>\n\n        <h3>Payment Details</h3>\n\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Credit Card</mat-label>\n            <mat-select id=\"cc-type\">\n              <mat-option value=\"visa\">Visa</mat-option>\n              <mat-option value=\"mastercard\">Mastercard</mat-option>\n              <mat-option value=\"amex\">American Express</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Name on Card</mat-label>\n            <input id=\"cc-name\" matInput>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Credit Card Number</mat-label>\n            <input id=\"cc-num\" class=\"fs-exclude\" type=\"text\" matInput>\n          </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Expiration</mat-label>\n            <input id=\"cc-expires\" class=\"fs-exclude\" matInput>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>CVV</mat-label>\n            <input id=\"cc-code\" class=\"fs-exclude\" type=\"text\" minlength=\"3\" maxlength=\"4\" matInput>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"end start\">\n          <button class=\"checkout-button\" mat-flat-button color=\"primary\" aria-label=\"Checkout\" (click)=\"checkout()\">\n            Checkout\n          </button>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- end order form -->\n  <!-- begin cart details-->\n  <div fxLayout=\"column\" fxFlex.gt-sm=\"30\">\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-title>Cart</mat-card-title>\n      <mat-card-content fxLayout=\"row\">\n        <mat-list>\n          <mat-list-item *ngFor=\"let item of (items$ | async)\"><span matBadge=\"{{item.quantity}}\"\n              matBadgePosition=\"above after\" matBadgeOverlap=\"false\">{{item.title}}</span>\n          </mat-list-item>\n          <mat-list-item><b>Total</b></mat-list-item>\n        </mat-list>\n        <mat-list>\n          <mat-list-item *ngFor=\"let item of (items$ | async)\">{{item.price | currency}} {{item.unit}}</mat-list-item>\n          <mat-divider></mat-divider>\n          <mat-list-item><b>{{getCartTotal() | currency}}</b></mat-list-item>\n        </mat-list>\n      </mat-card-content>\n\n    </mat-card>\n  </div>\n  <!-- end cart details-->\n</div>\n<!-- end main content -->\n<div fxFlex.gt-md=\"10\" fxFlex.lt-md=\"5\"></div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators'\nimport { Product, State, states } from 'src/app/models';\nimport { CartService } from 'src/app/services';\nimport { DatalayerService } from 'src/app/services/datalayer.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n\n  items$: Observable<Product[]>;\n  shippableStates: State[] = states;\n\n  constructor(\n    private cartService: CartService,\n    private datalayer: DatalayerService,\n    private router: Router,\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.items$ = this.cartService.getItems();\n  }\n\n  /**\n   * Get the cart's order total cost.\n   */\n  getCartTotal(): number {\n    return this.cartService.calculateTotalCost();\n  }\n\n  /**\n   * Process the order form and checkout.\n   */\n  checkout() {\n    // do some processing ...\n    this.items$.pipe(first()).subscribe(items => this.datalayer.checkout(items));\n    this.cartService.clear();\n    this.router.navigate(['/thankyou']);\n  }\n\n}\n","<button *ngIf=\"!user\" mat-menu-item (click)=\"login()\">\n  <mat-icon>login</mat-icon>\n  <span>Login</span>\n</button>\n\n<button *ngIf=\"user\" mat-menu-item (click)=\"logout()\">\n  <mat-icon>logout</mat-icon>\n  <span>Logout</span>\n</button>","import { Component } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase';\nimport * as FullStory from '@fullstory/browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  user: firebase.default.User | null;\n\n  constructor(private auth: AngularFireAuth) {\n    auth.user.subscribe(user => {\n      this.user = user;\n\n      if (user) {\n        const { uid, displayName, email } = user;\n        FullStory.identify(uid, { displayName, email });\n      }\n    });\n  }\n\n  /**\n   * Log in using Google OAuth.\n   */\n  login() {\n    this.auth.signInWithPopup(new firebase.default.auth.GoogleAuthProvider());\n  }\n\n  /**\n   * Logout the user.\n   */\n  logout() {\n    this.auth.signOut();\n  }\n\n}\n","<mat-grid-list class=\"product-list\" cols=\"{{numColumns}}\" [gutterSize]=\"'1px'\">\n  <mat-grid-tile *ngFor=\" let product of products\">\n    <mat-card class=\"product-card\" class=\"mat-elevation-z8\">\n      <div class=\"product-image\" [style.backgroundImage]=\"'url(' + product.image +')'\"></div>\n      <mat-card-header class=\"product-header\">\n        <mat-card-title>{{product.title}}</mat-card-title>\n        <mat-card-subtitle><b>${{product.price}}</b><small> / </small>{{product.unit}}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <p>{{product.description}}</p>\n      </mat-card-content>\n      <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-stroked-button color=\"primary\" (click)=\"addToCart(product)\">Add to Cart</button>\n      </mat-card-actions>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n\n<script>\n  FS.log('Someone disgusting put Durian in their cart...')\n  FS.event('Product Added', {\n  cart_id_str: '130983678493',\n  product_id_str: '798ith22928347',\n  sku_str: 'L-100',\n  category_str: 'Clothing',\n  name_str: 'Button Front Cardigan',\n  brand_str: 'Bright & Bold',\n  variant_str: 'Blue',\n  price_real: 58.99,\n  quantity_real: 1,\n  coupon_str: '25OFF',\n  position_int: 3,\n  url_str: 'https://www.example.com/product/path',\n  image_url_str: 'https://www.example.com/product/path.jpg'\n});\n</script>","import { Component, OnInit } from '@angular/core';\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductService, CartService } from 'src/app/services';\nimport { Product } from 'src/app/models';\nimport * as FullStory from '@fullstory/browser';\n\n/**\n * Breakpoint aliases (e.g. 'sm') to number of grid-list columns.\n */\ninterface BreakpointMap {\n  [name: string]: number\n}\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  // TODO (van) a better approach is min/max width based on the product's image size\n  private columnBreakpoints: BreakpointMap = {\n    'default': 3,\n    'xs': 1,\n    'sm': 2,\n    'md': 3,\n    'lg': 4,\n    'xl': 5,\n  };\n\n  numColumns = this.columnBreakpoints['default'];\n  products: Product[] = [];\n\n  constructor(\n    private cartService: CartService,\n    private mediaObserver: MediaObserver,\n    private productService: ProductService,\n    private snackbar: MatSnackBar,\n  ) { }\n\n  ngOnInit() {\n    this.observeBreakpoints();\n    this.buildProductList();\n  }\n\n  /**\n   * Adds a product to the user's shopping cart.\n   * A snackbar will appear showing the product's title that was added.\n   * @param product the Product to be added\n   */\n  addToCart(product: Product) {\n    const { id } = product;\n    this.cartService.addItem(id);\n    if(product.id == 7) {\n      this.snackbar.open(`WHY did you add ${product.title} to your cart!?`, '', { duration: 4000 });\n      const startOfPlayback = FullStory.getCurrentSessionURL();\n      const playbackAtThisMomentInTime = FullStory.getCurrentSessionURL(true);\n      FullStory.event('Subscribed', {\n        uid_str: '750948353',\n        plan_name_str: 'Professional',\n        plan_price_real: 299,\n        plan_users_int: 10,\n        days_in_trial_int: 42,\n        feature_packs: ['MAPS', 'DEV', 'DATA'],\n      });\n      FullStory.log('Something worked!')\n      \n    } else {\n      this.snackbar.open(`Added ${product.title} to your cart`, '', { duration: 2000 });\n    }\n  }\n\n  /**\n   * Observes for breakpoint changes and updates the number of columns.\n   * See `columnBreakpoints` for breakpoint-to-columns mapping.\n   */\n  private observeBreakpoints(): void {\n    this.mediaObserver.media$.subscribe((change: MediaChange) => {\n      const n = this.columnBreakpoints[change.mqAlias];\n      this.numColumns = n > 0 ? n : this.columnBreakpoints['default'];\n    });\n  }\n\n  /**\n   * Builds a list of products from the catalog.\n   */\n  buildProductList(): void {\n    this.productService.getProducts().subscribe(products => this.products = products);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thank-you',\n  templateUrl: './thank-you.component.html',\n  styles: []\n})\nexport class ThankYouComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <h1>Thank you for your order!</h1>\n</div>","/**\n * A geographic state like Georgia.\n */\nexport interface State {\n  name: string;\n  abbreviation: string;\n}\n\nexport const states: State[] = [\n  { name: 'Alabama', abbreviation: 'AL' },\n  { name: 'Alaska', abbreviation: 'AK' },\n  { name: 'American Samoa', abbreviation: 'AS' },\n  { name: 'Arizona', abbreviation: 'AZ' },\n  { name: 'Arkansas', abbreviation: 'AR' },\n  { name: 'California', abbreviation: 'CA' },\n  { name: 'Colorado', abbreviation: 'CO' },\n  { name: 'Connecticut', abbreviation: 'CT' },\n  { name: 'Delaware', abbreviation: 'DE' },\n  { name: 'District Of Columbia', abbreviation: 'DC' },\n  { name: 'Federated States Of Micronesia', abbreviation: 'FM' },\n  { name: 'Florida', abbreviation: 'FL' },\n  { name: 'Georgia', abbreviation: 'GA' },\n  { name: 'Guam', abbreviation: 'GU' },\n  { name: 'Hawaii', abbreviation: 'HI' },\n  { name: 'Idaho', abbreviation: 'ID' },\n  { name: 'Illinois', abbreviation: 'IL' },\n  { name: 'Indiana', abbreviation: 'IN' },\n  { name: 'Iowa', abbreviation: 'IA' },\n  { name: 'Kansas', abbreviation: 'KS' },\n  { name: 'Kentucky', abbreviation: 'KY' },\n  { name: 'Louisiana', abbreviation: 'LA' },\n  { name: 'Maine', abbreviation: 'ME' },\n  { name: 'Marshall Islands', abbreviation: 'MH' },\n  { name: 'Maryland', abbreviation: 'MD' },\n  { name: 'Massachusetts', abbreviation: 'MA' },\n  { name: 'Michigan', abbreviation: 'MI' },\n  { name: 'Minnesota', abbreviation: 'MN' },\n  { name: 'Mississippi', abbreviation: 'MS' },\n  { name: 'Missouri', abbreviation: 'MO' },\n  { name: 'Montana', abbreviation: 'MT' },\n  { name: 'Nebraska', abbreviation: 'NE' },\n  { name: 'Nevada', abbreviation: 'NV' },\n  { name: 'New Hampshire', abbreviation: 'NH' },\n  { name: 'New Jersey', abbreviation: 'NJ' },\n  { name: 'New Mexico', abbreviation: 'NM' },\n  { name: 'New York', abbreviation: 'NY' },\n  { name: 'North Carolina', abbreviation: 'NC' },\n  { name: 'North Dakota', abbreviation: 'ND' },\n  { name: 'Northern Mariana Islands', abbreviation: 'MP' },\n  { name: 'Ohio', abbreviation: 'OH' },\n  { name: 'Oklahoma', abbreviation: 'OK' },\n  { name: 'Oregon', abbreviation: 'OR' },\n  { name: 'Palau', abbreviation: 'PW' },\n  { name: 'Pennsylvania', abbreviation: 'PA' },\n  { name: 'Puerto Rico', abbreviation: 'PR' },\n  { name: 'Rhode Island', abbreviation: 'RI' },\n  { name: 'South Carolina', abbreviation: 'SC' },\n  { name: 'South Dakota', abbreviation: 'SD' },\n  { name: 'Tennessee', abbreviation: 'TN' },\n  { name: 'Texas', abbreviation: 'TX' },\n  { name: 'Utah', abbreviation: 'UT' },\n  { name: 'Vermont', abbreviation: 'VT' },\n  { name: 'Virgin Islands', abbreviation: 'VI' },\n  { name: 'Virginia', abbreviation: 'VA' },\n  { name: 'Washington', abbreviation: 'WA' },\n  { name: 'West Virginia', abbreviation: 'WV' },\n  { name: 'Wisconsin', abbreviation: 'WI' },\n  { name: 'Wyoming', abbreviation: 'WY' }\n];","import { Injectable } from '@angular/core';\nimport { Product } from '../models';\nimport { ReplaySubject } from 'rxjs';\nimport { ProductService } from './product.service';\nimport { DatalayerService } from './datalayer.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private items: Product[] = [];\n  private subject = new ReplaySubject<Product[]>();\n\n  constructor(private datalayer: DatalayerService,\n    private productService: ProductService) {\n\n  }\n\n  /**\n   * Adds an item to the shopping cart. If not already added, product details\n   * will be obtained from the catalog. If the item already exists, the item's\n   * quantity will be incremented by one.\n   * @param productId the Product ID of the corresponding item\n   */\n  addItem(productId: number): void {\n    // check if the item is already in the cart\n    const item = this.items.find(product => product.id === productId);\n\n    if (item) {\n      // update the item's quantity and notify observers\n      const { quantity } = item;\n      item.quantity += quantity;\n\n      this.subject.next(this.items);\n\n      // update the data layer\n      this.datalayer.addToCart(item, this.items);\n    } else {\n      // get the product from the catalog and add as an initial item\n      this.productService.getProduct(productId).subscribe(product => {\n        const item: Product = {\n          ...product,\n          quantity: 1 // initial quantity of 1\n        }\n\n        // store the item and notify observers\n        this.items.push(item);\n        this.subject.next(this.items);\n\n        // update the data layer\n        this.datalayer.addToCart(item, this.items);\n      });\n    }\n  }\n\n  /**\n   * Calculates the total cost of all items in the cart (price x quantity).\n   */\n  calculateTotalCost(): number {\n    return this.items.reduce((acc: number, item: Product) => acc += item.price * item.quantity, 0)\n  }\n\n  /**\n   * Empties all items in the cart.\n   */\n  clear() {\n    this.items = [];\n    this.subject.next(this.items);\n  }\n\n  /**\n   * Gets the items in the cart as an Observable.\n   * A ReplaySubject is used to re-emit the cart's items to newly instantiated\n   * components.\n   */\n  getItems(): ReplaySubject<Product[]> {\n    return this.subject;\n  }\n\n  /**\n   * Removes an item entirely from the cart.\n   * @param productId the Product ID of the corresponding item\n   */\n  removeItem(productId: number): void {\n    // find the item\n    const index = this.items.findIndex(product => product.id === productId)\n\n    if (index >= 0) {\n      const item = this.items[index];\n\n      // remove the item and notify observers\n      this.items.splice(index, 1);\n      this.subject.next(this.items);\n\n      // update the data layer\n      this.datalayer.removeFromCart(item, this.items);\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAnalytics } from '@angular/fire/analytics';\nimport * as firebase from 'firebase';\n\nimport { Cart, Price, ProductInfo, ProductItem, TotalCartPrice } from '../models/ceddl';\nimport { Product } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatalayerService {\n\n  constructor(private analytics: AngularFireAnalytics) { }\n\n  /**\n   * Updates data layers with product information added to the cart.\n   * @param product added\n   * @param items in the cart after addition\n   */\n  addToCart(product: Product, items: Product[]) {\n    // Google\n    this.analytics.logEvent(firebase.default.analytics.EventName.ADD_TO_CART, product);\n\n    // Tealium\n    Object.assign(((window as any).utag.data), this.tealiumCart(product, items, 'cart_add'));\n\n    // CEDDL\n    const digitalData = window['digitalData'] as any;\n    (digitalData.cart as Cart).item = items.map(item => this.ceddlProductItem(item));\n    (digitalData.cart as Cart).price = this.ceddlTotalCartPrice((digitalData.cart as Cart).item);\n  }\n\n  /**\n   * Updates data layers with product information removed from the cart.\n   * @param product removed\n   * @param items in the cart after removal\n   */\n  removeFromCart(product: Product, items: Product[]) {\n    // Google\n    this.analytics.logEvent(firebase.default.analytics.EventName.REMOVE_FROM_CART, product);\n\n    // Tealium\n    Object.assign(((window as any).utag.data), this.tealiumCart(product, items, 'cart_remove'));\n\n    // CEDDL\n    const digitalData = window['digitalData'] as any;\n    (digitalData.cart as Cart).item = items.map(item => this.ceddlProductItem(item));\n    (digitalData.cart as Cart).price = this.ceddlTotalCartPrice((digitalData.cart as Cart).item);\n  }\n\n  /**\n   * Updates data layers with checkout information.\n   * @param items used during checkout\n   */\n  checkout(items: Product[]) {\n    // Google\n    this.analytics.logEvent(firebase.default.analytics.EventName.PURCHASE, { items });\n\n    // Tealium\n    Object.assign(((window as any).utag.data), this.tealiumCheckout(items));\n  }\n\n  /**\n   * Builds a Tealium cart object for the data layer.\n   * @param product added or removed from the cart\n   * @param items currently in the cart (after addition or removal)\n   * @param tealiumEvent name from the retail definition (i.e. cart_add or cart_remove)\n   */\n  private tealiumCart(product: Product, items: Product[], tealiumEvent: 'cart_add' | 'cart_remove'): any {\n    // NOTE toString() for numeric values is recommended in Tealium documentation\n    return {\n      cart_product_id: items.map((item: Product) => item.id.toString()),\n      cart_product_price: items.map((item: Product) => item.price.toString()),\n      cart_product_quantity: items.map((item: Product) => item.quantity.toString()),\n      product_id: [product.id],\n      product_image_url: [product.image],\n      product_name: [product.title],\n      product_original_price: [product.price],\n      product_price: [product.price],\n      product_quantity: [product.quantity.toString()],\n      tealium_event: tealiumEvent\n    };\n  }\n\n  /**\n   * Builds a Tealium checkout object for the data layer.\n   * @param items currently in the cart\n   */\n  private tealiumCheckout(items: Product[]): any {\n    return {\n      cart_total_items: items.length.toString(),\n      cart_total_value: items.reduce((tax: number, item: Product) => tax += (item.price * item.quantity) * 1.09, 0),\n      order_currency_code: 'USD',\n      order_discount_amount: '0.00',\n      order_id: Date.now().toString(),\n      order_payment_type: 'visa',\n      order_promo_code: '',\n      order_shipping_amount: `${items.length}.00`,\n      order_shipping_type: 'UPS',\n      order_subtotal: items.reduce((tax: number, item: Product) => tax += item.price * item.quantity, 0),\n      order_tax_amount: items.reduce((tax: number, item: Product) => tax += (item.price * item.quantity) * 1.09, 0),\n      order_total: items.reduce((tax: number, item: Product) => tax += (item.price * item.quantity) * 1.09, 0),\n      page_name: 'Order Confirmation - Thank You',\n      page_type: 'order',\n      product_id: items.map(item => item.id.toString()),\n      product_image_url: items.map(item => item.image),\n      product_name: items.map(item => item.title),\n      product_original_price: items.map(item => item.price.toString()),\n      product_price: items.map(item => item.price.toString()),\n      product_quantity: items.map(item => item.quantity.toString()),\n      tealium_event: 'purchase'\n    };\n  }\n\n  /**\n   * CEDDL Price converter.\n   * @param item to convert\n   */\n  ceddlPrice(item: Product): Price {\n    return {\n      basePrice: item.price,\n      currency: 'USD',\n      taxRate: 0.09,\n      shipping: 1.00,\n      shippingMethod: 'UPS-Ground',\n      priceWithTax: item.price * 1.09,\n      voucherCode: '',\n      voucherDiscount: 0.00,\n    };\n  }\n\n  /**\n   * CEDDL ProductInfo converter.\n   * @param product to convert\n   */\n  ceddlProductInfo(product: Product): ProductInfo {\n    return {\n      productID: product.id.toString(),\n      productName: product.title,\n      description: product.description,\n      productImage: product.image,\n      productURL: location.host,\n      productThumbnail: product.image,\n      manufacturer: 'FruitShoppe',\n      sku: product.id.toString(),\n      color: 'N/A',\n      size: 'N/A',\n    };\n  }\n\n  /**\n   * CEDDL ProductItem converter.\n   * @param item to convert\n   */\n  ceddlProductItem(item: Product): ProductItem {\n    return {\n      productInfo: this.ceddlProductInfo(item),\n      category: {\n        primaryCategory: 'fruit',\n      },\n      quantity: item.quantity,\n      price: this.ceddlPrice(item),\n      linkedProduct: [],\n      attributes: {},\n    };\n  }\n\n  /**\n   * CEDDL TotalCartPrice converter.\n   * @param items to build TotalCartPrice\n   */\n  ceddlTotalCartPrice(items: ProductItem[]): TotalCartPrice {\n    return {\n      basePrice: items.reduce((price: number, item: ProductItem) => price += item.price.basePrice * item.quantity, 0),\n      voucherCode: '',\n      voucherDiscount: 0.00,\n      currency: 'USD',\n      taxRate: 0.09,\n      shipping: items.reduce((price: number, item: ProductItem) => price += item.price.shipping, 0),\n      shippingMethod: 'UPS-Ground',\n      priceWithTax: items.reduce((price: number, item: ProductItem) => price += item.price.priceWithTax * item.quantity, 0),\n      cartTotal: items.reduce((price: number, item: ProductItem) => price += (item.price.priceWithTax * item.quantity) + item.price.shipping, 0)\n    };\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { Product } from '../models'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  readonly imageUrl = 'https://fruitshoppe.firebaseapp.com/images'; // URL of product images folder\n  readonly apiUrl: string;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private http: HttpClient,\n    private snackBar: MatSnackBar,\n  ) {\n    // based on whether to use mocks or the API server, build the full API URL\n    this.apiUrl = environment.useMockApi ? `${environment.localApiRoot}/products.json` :\n      `${environment.remoteApiRoot}/products`;\n  }\n\n  /**\n   * Gets an observable that emits a product from the catalog.\n   * @param id the identifier of the product\n   */\n  getProduct(id: number): Observable<Product | null> {\n    // if using the mock API, just get all products and find the one with the given id\n    if (environment.useMockApi) {\n      return this.getProducts().pipe(\n        map(products => products.find(product => product.id === id)), // force the Products[] into a Product\n        catchError(this.handleError<Product>('getProduct', null))\n      );\n    } else {\n      const url = `${this.apiUrl}/${id}`;\n\n      return this.http.get<Product>(url).pipe(\n        map(product => this.setImageUrl(product)),\n        catchError(this.handleError<Product>('getProduct', null))\n      );\n    }\n  }\n\n  /**\n   * Gets an observable that emits a list of products from the catalog.\n   * @param query An optional query string to search for products\n   */\n  getProducts(query?: string): Observable<Product[]> {\n    // TODO (van) allow query parameter to filter mock products.json\n    const url = query ? `${this.apiUrl}?q=${query}` : this.apiUrl;\n\n    return this.http.get<Product[]>(url).pipe(\n      map(products => products.map(product => this.setImageUrl(product))),\n      catchError(this.handleError<Product[]>('getProducts', []))\n    );\n  }\n\n  /**\n   * Provides a selector to allow handling of errors from service calls.\n   * @param operation the operation display name that encountered an error\n   * @param result the return value that should be passed to the next operator\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: Error): Observable<T> => {\n      const { message } = error;\n\n      console.error(`${operation} failed: ${message}`);\n      this.snackBar.open(`Failed to get product(s). ${message}`, 'OK');\n\n      return of(result as T);\n    };\n  }\n\n  /**\n   * By default, products have the image filename in the `image` property.\n   * This function returns a copy of a product with the `image` property set to\n   * the full URL to the image. It also sanitizes the URL so that it is deemed\n   * safe by Angular.\n   * @param product\n   */\n  private setImageUrl(product: Product): Product {\n    let { image } = product;\n    image = `${this.imageUrl}/${image}`;\n\n    // depending on the usage of the URL, sanitize\n    this.sanitizer.bypassSecurityTrustStyle(image); // if image is used as a style backgroundImage\n\n    return {\n      ...product,\n      image\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n/**\n * Define configuration options used by the app:\n * production - whether or not this app is running in production\n * localApiRoot - mock files that contain data (i.e. emulate an API resource locally)\n * remoteApiRoot - the API base URL if hosting the backend demo (https://github.com/fullstorydev/api-shoppe-demo)\n * useMockApi - true to use localApi, false to use the remoteApi\n */\nexport const environment = {\n  production: false,\n  localApiRoot: '/assets',\n  remoteApiRoot: 'http://localhost:3000/api',\n  useMockApi: true,\n  orgId: '173V6P',\n  firebase: {\n    // optionally add your firebase config here\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}