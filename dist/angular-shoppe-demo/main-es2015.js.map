{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/cart/cart-button.component.ts","./src/app/components/cart/cart-button.component.html","./src/app/components/cart/cart.component.html","./src/app/components/cart/cart.component.ts","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/components/index.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/components/thank-you/thank-you.component.ts","./src/app/components/thank-you/thank-you.component.html","./src/app/models/index.ts","./src/app/models/state.ts","./src/app/services/cart.service.ts","./src/app/services/datalayer.service.ts","./src/app/services/index.ts","./src/app/services/product.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartComponent, CheckoutComponent, ProductsComponent, ThankYouComponent } from './components';\n\n\nconst routes: Routes = [\n  { path: '', component: ProductsComponent },\n  { path: 'cart', component: CartComponent },\n  { path: 'checkout', component: CheckoutComponent },\n  { path: 'products', component: ProductsComponent },\n  { path: 'thankyou', component: ThankYouComponent },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport * as FullStory from '@fullstory/browser';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Angular Shoppe';\n\n  constructor() {\n    //const { orgId } = environment;\n\n    // load the FullStory recording snippet if an orgId is set\n    // if (orgId) {\n    //   FullStory.init({ orgId, debug: false });\n    // }\n    FullStory.init({ orgId: '173V6P',\n      devMode: true });\n  }\n}\n","<mat-toolbar>\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Navigation menu\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <a routerLink=\"/products\" class=\"toolbar-title\">{{ title | uppercase }}</a>\n  <span class=\"toolbar-spacer\"></span>\n  <app-cart-button></app-cart-button>\n  <mat-menu #menu=\"matMenu\">\n    <app-login></app-login>\n  </mat-menu>\n</mat-toolbar>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAnalyticsModule, ScreenTrackingService } from '@angular/fire/analytics';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { environment } from 'src/environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CartComponent, CartButtonComponent, CheckoutComponent, ProductsComponent, ThankYouComponent } from './components';\nimport { CartService, ProductService } from './services';\nimport { LoginComponent } from './components/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CartComponent,\n    CartButtonComponent,\n    CheckoutComponent,\n    ProductsComponent,\n    ThankYouComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAnalyticsModule,\n    AngularFireAuthModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n  providers: [\n    CartService,\n    ProductService,\n    ScreenTrackingService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../../services';\n\n@Component({\n  selector: 'app-cart-button',\n  templateUrl: 'cart-button.component.html',\n})\nexport class CartButtonComponent implements OnInit {\n  cartBadge: number;\n\n  constructor(private cartService: CartService) {\n\n  }\n\n  ngOnInit(): void {\n    this.cartService.getItems().subscribe(items => this.cartBadge = items.length);\n  }\n}\n","<a routerLink=\"/cart\" mat-flat-button color=\"primary\" routerLink=\"cart\" aria-label=\"Shopping Cart\"\n  matBadge=\"{{cartBadge}}\" matBadgePosition=\"above after\" matBadgeColor=\"accent\">\n  <mat-icon class=\"toolbar-icon\">shopping_cart</mat-icon>My Cart\n</a>","<div fxFlex.lt-md=\"5\" fxFlex.gt-sm=\"20\"></div>\n<div fxFlex class=\"shopping-cart\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n  <div *ngIf=\"!(items$ | async) || (items$ | async)?.length == 0\" class=\"empty-cart\">\n    <h3>Alas, there are no items in your cart.</h3>\n    <a mat-button color=\"primary\" routerLink=\"/products\">Keep shoppe-ing</a>\n  </div>\n  <div *ngIf=\"(items$ | async)?.length > 0\">\n\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-title>Your cart</mat-card-title>\n      <mat-card-content fxLayout=\"column\">\n        <table mat-table [dataSource]=\"items$\">\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let item\">{{item.title}}</td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"cost\">\n            <th mat-header-cell *matHeaderCellDef>Cost</th>\n            <td mat-cell *matCellDef=\"let item\">{{item.price}}</td>\n            <td mat-footer-cell *matFooterCellDef><b>{{totalCost | currency}}</b></td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef>Quantity</th>\n            <td mat-cell *matCellDef=\"let item\">{{item.quantity}}</td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"removeAction\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let item\">\n              <button mat-icon-button color=\"warn\" matTooltip=\"Remove {{item.title }} from your cart\"\n                (click)=\"removeItem(item)\">\n                <mat-icon>remove_shopping_cart</mat-icon>\n              </button>\n            </td>\n            <td mat-footer-cell *matFooterCellDef></td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let item; columns: displayedColumns;\"></tr>\n          <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n        </table>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n          <a class=\"link-button\" routerLink=\"/products\" mat-stroked-button color=\"primary\">Keep Shoppe-ing</a>\n          <a class=\"link-button\" routerLink=\"/checkout\" mat-flat-button color=\"primary\" aria-label=\"Checkout\">\n            Continue to Checkout\n          </a>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n<div fxFlex.lt-md=\"5\" fxFlex.gt-sm=\"20\"></div>","import { Component, OnInit } from '@angular/core';\nimport { CartService } from 'src/app/services';\nimport { Product } from 'src/app/models';\nimport { Observable } from 'rxjs';\nimport * as FullStory from '@fullstory/browser';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n  items$: Observable<Product[]>;\n  displayedColumns: string[] = ['removeAction', 'name', 'quantity', 'cost'];\n  totalCost: number = 0;\n\n  constructor(private cartService: CartService) {\n  }\n\n  ngOnInit() {\n    this.initDataSource();\n    this.initCalculator();\n  }\n\n  /**\n   * Initialize the MatTable's datasource.\n   */\n  private initDataSource(): void {\n    this.items$ = this.cartService.getItems();\n  }\n\n  /**\n   * Based on items in the cart, calculate things (e.g. totals, quantities, etc).\n   */\n  private initCalculator(): void {\n    // add an observer to the cart's items and compute the total cost\n    this.items$.subscribe(() => {\n      this.totalCost = this.cartService.calculateTotalCost();\n    });\n  }\n\n  /**\n   * Removes an item from the cart entirely.\n   * @param item the Product item to be removed\n   */\n  removeItem(item: Product): void {\n    const { id } = item;\n    this.cartService.removeItem(id);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators'\nimport { Product, State, states } from 'src/app/models';\nimport { CartService } from 'src/app/services';\nimport { DatalayerService } from 'src/app/services/datalayer.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n\n  items$: Observable<Product[]>;\n  shippableStates: State[] = states;\n\n  constructor(\n    private cartService: CartService,\n    private datalayer: DatalayerService,\n    private router: Router,\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.items$ = this.cartService.getItems();\n  }\n\n  /**\n   * Get the cart's order total cost.\n   */\n  getCartTotal(): number {\n    return this.cartService.calculateTotalCost();\n  }\n\n  /**\n   * Process the order form and checkout.\n   */\n  checkout() {\n    // do some processing ...\n    this.items$.pipe(first()).subscribe(items => this.datalayer.checkout(items));\n    this.cartService.clear();\n    this.router.navigate(['/thankyou']);\n  }\n\n}\n","<div fxFlex.gt-md=\"10\" fxFlex.lt-md=\"5\"></div>\n<!-- begin main content -->\n<div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxFlex>\n  <!-- begin order form -->\n  <div fxLayout=\"column\" fxFlex.gt-sm=\"80\">\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-title>Checkout</mat-card-title>\n      <mat-card-content>\n        <h3>Billing Address</h3>\n\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Firstname</mat-label>\n            <input id=\"firstname\" type=\"text\" matInput>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Lastname</mat-label>\n            <input id=\"lastname\" type=\"text\" matInput>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input id=\"email\" type=\"email\" matInput>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Address</mat-label>\n            <input id=\"address\" type=\"text\" matInput class=\"fs-exclude\">\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Address 2</mat-label>\n            <input id=\"address2\" type=\"text\" matInput class=\"fs-exclude\">\n          </mat-form-field>\n        </div>\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>City</mat-label>\n            <input id=\"city\" type=\"text\" matInput>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>State</mat-label>\n            <mat-select id=\"state\">\n              <mat-option *ngFor=\"let state of shippableStates\" value=\"{{state.abbreviation}}\">{{state.name}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Zip</mat-label>\n            <input id=\"zipcode\" type=\"number\" minlength=\"5\" maxlength=\"5\" matInput>\n          </mat-form-field>\n        </div>\n\n        <h3>Payment Details</h3>\n\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Credit Card</mat-label>\n            <mat-select id=\"cc-type\">\n              <mat-option value=\"visa\">Visa</mat-option>\n              <mat-option value=\"mastercard\">Mastercard</mat-option>\n              <mat-option value=\"amex\">American Express</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout.lt-md=\"column\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Name on Card</mat-label>\n            <input id=\"cc-name\" matInput>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Credit Card Number</mat-label>\n            <input id=\"cc-num\" class=\"fs-exclude\" type=\"text\" matInput>\n          </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Expiration</mat-label>\n            <input id=\"cc-expires\" class=\"fs-exclude\" matInput>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>CVV</mat-label>\n            <input id=\"cc-code\" class=\"fs-exclude\" type=\"text\" minlength=\"3\" maxlength=\"4\" matInput>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"end start\">\n          <button class=\"checkout-button\" mat-flat-button color=\"primary\" aria-label=\"Checkout\" (click)=\"checkout()\">\n            Checkout\n          </button>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- end order form -->\n  <!-- begin cart details-->\n  <div fxLayout=\"column\" fxFlex.gt-sm=\"30\">\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-title>Cart</mat-card-title>\n      <mat-card-content fxLayout=\"row\">\n        <mat-list>\n          <mat-list-item *ngFor=\"let item of (items$ | async)\"><span matBadge=\"{{item.quantity}}\"\n              matBadgePosition=\"above after\" matBadgeOverlap=\"false\">{{item.title}}</span>\n          </mat-list-item>\n          <mat-list-item><b>Total</b></mat-list-item>\n        </mat-list>\n        <mat-list>\n          <mat-list-item *ngFor=\"let item of (items$ | async)\">{{item.price | currency}} {{item.unit}}</mat-list-item>\n          <mat-divider></mat-divider>\n          <mat-list-item><b>{{getCartTotal() | currency}}</b></mat-list-item>\n        </mat-list>\n      </mat-card-content>\n\n    </mat-card>\n  </div>\n  <!-- end cart details-->\n</div>\n<!-- end main content -->\n<div fxFlex.gt-md=\"10\" fxFlex.lt-md=\"5\"></div>","export * from './cart/cart.component';\nexport * from './cart/cart-button.component';\nexport * from './checkout/checkout.component';\nexport * from './products/products.component';\nexport * from './thank-you/thank-you.component';","import { Component } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase';\nimport * as FullStory from '@fullstory/browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  user: firebase.default.User | null;\n\n  constructor(private auth: AngularFireAuth) {\n    auth.user.subscribe(user => {\n      this.user = user;\n\n      if (user) {\n        const { uid, displayName, email } = user;\n        FullStory.identify(uid, { displayName, email });\n      }\n    });\n  }\n\n  /**\n   * Log in using Google OAuth.\n   */\n  login() {\n    this.auth.signInWithPopup(new firebase.default.auth.GoogleAuthProvider());\n  }\n\n  /**\n   * Logout the user.\n   */\n  logout() {\n    this.auth.signOut();\n  }\n\n}\n","<button *ngIf=\"!user\" mat-menu-item (click)=\"login()\">\n  <mat-icon>login</mat-icon>\n  <span>Login</span>\n</button>\n\n<button *ngIf=\"user\" mat-menu-item (click)=\"logout()\">\n  <mat-icon>logout</mat-icon>\n  <span>Logout</span>\n</button>","import { Component, OnInit } from '@angular/core';\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ProductService, CartService } from 'src/app/services';\nimport { Product } from 'src/app/models';\nimport * as FullStory from '@fullstory/browser';\n\n/**\n * Breakpoint aliases (e.g. 'sm') to number of grid-list columns.\n */\ninterface BreakpointMap {\n  [name: string]: number\n}\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  // TODO (van) a better approach is min/max width based on the product's image size\n  private columnBreakpoints: BreakpointMap = {\n    'default': 3,\n    'xs': 1,\n    'sm': 2,\n    'md': 3,\n    'lg': 4,\n    'xl': 5,\n  };\n\n  numColumns = this.columnBreakpoints['default'];\n  products: Product[] = [];\n\n  constructor(\n    private cartService: CartService,\n    private mediaObserver: MediaObserver,\n    private productService: ProductService,\n    private snackbar: MatSnackBar,\n  ) { }\n\n  ngOnInit() {\n    this.observeBreakpoints();\n    this.buildProductList();\n  }\n\n  /**\n   * Adds a product to the user's shopping cart.\n   * A snackbar will appear showing the product's title that was added.\n   * @param product the Product to be added\n   */\n  addToCart(product: Product) {\n    const { id } = product;\n    this.cartService.addItem(id);\n    if(product.id == 7) {\n      this.snackbar.open(`WHY did you add ${product.title} to your cart!?`, '', { duration: 4000 });\n      const startOfPlayback = FullStory.getCurrentSessionURL();\n      const playbackAtThisMomentInTime = FullStory.getCurrentSessionURL(true);\n      FullStory.event('Subscribed', {\n        uid_str: '750948353',\n        plan_name_str: 'Professional',\n        plan_price_real: 299,\n        plan_users_int: 10,\n        days_in_trial_int: 42,\n        feature_packs: ['MAPS', 'DEV', 'DATA'],\n      });\n      FullStory.log('Something worked!')\n      \n    } else {\n      this.snackbar.open(`Added ${product.title} to your cart`, '', { duration: 2000 });\n    }\n  }\n\n  /**\n   * Observes for breakpoint changes and updates the number of columns.\n   * See `columnBreakpoints` for breakpoint-to-columns mapping.\n   */\n  private observeBreakpoints(): void {\n    this.mediaObserver.media$.subscribe((change: MediaChange) => {\n      const n = this.columnBreakpoints[change.mqAlias];\n      this.numColumns = n > 0 ? n : this.columnBreakpoints['default'];\n    });\n  }\n\n  /**\n   * Builds a list of products from the catalog.\n   */\n  buildProductList(): void {\n    this.productService.getProducts().subscribe(products => this.products = products);\n  }\n}\n","<mat-grid-list class=\"product-list\" cols=\"{{numColumns}}\" [gutterSize]=\"'1px'\">\n  <mat-grid-tile *ngFor=\" let product of products\">\n    <mat-card class=\"product-card\" class=\"mat-elevation-z8\">\n      <div class=\"product-image\" [style.backgroundImage]=\"'url(' + product.image +')'\"></div>\n      <mat-card-header class=\"product-header\">\n        <mat-card-title>{{product.title}}</mat-card-title>\n        <mat-card-subtitle><b>${{product.price}}</b><small> / </small>{{product.unit}}</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <p>{{product.description}}</p>\n      </mat-card-content>\n      <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button mat-stroked-button color=\"primary\" (click)=\"addToCart(product)\">Add to Cart</button>\n      </mat-card-actions>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n\n<script>\n  FS.log('Someone disgusting put Durian in their cart...')\n  FS.event('Product Added', {\n  cart_id_str: '130983678493',\n  product_id_str: '798ith22928347',\n  sku_str: 'L-100',\n  category_str: 'Clothing',\n  name_str: 'Button Front Cardigan',\n  brand_str: 'Bright & Bold',\n  variant_str: 'Blue',\n  price_real: 58.99,\n  quantity_real: 1,\n  coupon_str: '25OFF',\n  position_int: 3,\n  url_str: 'https://www.example.com/product/path',\n  image_url_str: 'https://www.example.com/product/path.jpg'\n});\n</script>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thank-you',\n  templateUrl: './thank-you.component.html',\n  styles: []\n})\nexport class ThankYouComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <h1>Thank you for your order!</h1>\n</div>","export * from './product';\nexport * from './state';","/**\n * A geographic state like Georgia.\n */\nexport interface State {\n  name: string;\n  abbreviation: string;\n}\n\nexport const states: State[] = [\n  { name: 'Alabama', abbreviation: 'AL' },\n  { name: 'Alaska', abbreviation: 'AK' },\n  { name: 'American Samoa', abbreviation: 'AS' },\n  { name: 'Arizona', abbreviation: 'AZ' },\n  { name: 'Arkansas', abbreviation: 'AR' },\n  { name: 'California', abbreviation: 'CA' },\n  { name: 'Colorado', abbreviation: 'CO' },\n  { name: 'Connecticut', abbreviation: 'CT' },\n  { name: 'Delaware', abbreviation: 'DE' },\n  { name: 'District Of Columbia', abbreviation: 'DC' },\n  { name: 'Federated States Of Micronesia', abbreviation: 'FM' },\n  { name: 'Florida', abbreviation: 'FL' },\n  { name: 'Georgia', abbreviation: 'GA' },\n  { name: 'Guam', abbreviation: 'GU' },\n  { name: 'Hawaii', abbreviation: 'HI' },\n  { name: 'Idaho', abbreviation: 'ID' },\n  { name: 'Illinois', abbreviation: 'IL' },\n  { name: 'Indiana', abbreviation: 'IN' },\n  { name: 'Iowa', abbreviation: 'IA' },\n  { name: 'Kansas', abbreviation: 'KS' },\n  { name: 'Kentucky', abbreviation: 'KY' },\n  { name: 'Louisiana', abbreviation: 'LA' },\n  { name: 'Maine', abbreviation: 'ME' },\n  { name: 'Marshall Islands', abbreviation: 'MH' },\n  { name: 'Maryland', abbreviation: 'MD' },\n  { name: 'Massachusetts', abbreviation: 'MA' },\n  { name: 'Michigan', abbreviation: 'MI' },\n  { name: 'Minnesota', abbreviation: 'MN' },\n  { name: 'Mississippi', abbreviation: 'MS' },\n  { name: 'Missouri', abbreviation: 'MO' },\n  { name: 'Montana', abbreviation: 'MT' },\n  { name: 'Nebraska', abbreviation: 'NE' },\n  { name: 'Nevada', abbreviation: 'NV' },\n  { name: 'New Hampshire', abbreviation: 'NH' },\n  { name: 'New Jersey', abbreviation: 'NJ' },\n  { name: 'New Mexico', abbreviation: 'NM' },\n  { name: 'New York', abbreviation: 'NY' },\n  { name: 'North Carolina', abbreviation: 'NC' },\n  { name: 'North Dakota', abbreviation: 'ND' },\n  { name: 'Northern Mariana Islands', abbreviation: 'MP' },\n  { name: 'Ohio', abbreviation: 'OH' },\n  { name: 'Oklahoma', abbreviation: 'OK' },\n  { name: 'Oregon', abbreviation: 'OR' },\n  { name: 'Palau', abbreviation: 'PW' },\n  { name: 'Pennsylvania', abbreviation: 'PA' },\n  { name: 'Puerto Rico', abbreviation: 'PR' },\n  { name: 'Rhode Island', abbreviation: 'RI' },\n  { name: 'South Carolina', abbreviation: 'SC' },\n  { name: 'South Dakota', abbreviation: 'SD' },\n  { name: 'Tennessee', abbreviation: 'TN' },\n  { name: 'Texas', abbreviation: 'TX' },\n  { name: 'Utah', abbreviation: 'UT' },\n  { name: 'Vermont', abbreviation: 'VT' },\n  { name: 'Virgin Islands', abbreviation: 'VI' },\n  { name: 'Virginia', abbreviation: 'VA' },\n  { name: 'Washington', abbreviation: 'WA' },\n  { name: 'West Virginia', abbreviation: 'WV' },\n  { name: 'Wisconsin', abbreviation: 'WI' },\n  { name: 'Wyoming', abbreviation: 'WY' }\n];","import { Injectable } from '@angular/core';\nimport { Product } from '../models';\nimport { ReplaySubject } from 'rxjs';\nimport { ProductService } from './product.service';\nimport { DatalayerService } from './datalayer.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private items: Product[] = [];\n  private subject = new ReplaySubject<Product[]>();\n\n  constructor(private datalayer: DatalayerService,\n    private productService: ProductService) {\n\n  }\n\n  /**\n   * Adds an item to the shopping cart. If not already added, product details\n   * will be obtained from the catalog. If the item already exists, the item's\n   * quantity will be incremented by one.\n   * @param productId the Product ID of the corresponding item\n   */\n  addItem(productId: number): void {\n    // check if the item is already in the cart\n    const item = this.items.find(product => product.id === productId);\n\n    if (item) {\n      // update the item's quantity and notify observers\n      const { quantity } = item;\n      item.quantity += quantity;\n\n      this.subject.next(this.items);\n\n      // update the data layer\n      this.datalayer.addToCart(item, this.items);\n    } else {\n      // get the product from the catalog and add as an initial item\n      this.productService.getProduct(productId).subscribe(product => {\n        const item: Product = {\n          ...product,\n          quantity: 1 // initial quantity of 1\n        }\n\n        // store the item and notify observers\n        this.items.push(item);\n        this.subject.next(this.items);\n\n        // update the data layer\n        this.datalayer.addToCart(item, this.items);\n      });\n    }\n  }\n\n  /**\n   * Calculates the total cost of all items in the cart (price x quantity).\n   */\n  calculateTotalCost(): number {\n    return this.items.reduce((acc: number, item: Product) => acc += item.price * item.quantity, 0)\n  }\n\n  /**\n   * Empties all items in the cart.\n   */\n  clear() {\n    this.items = [];\n    this.subject.next(this.items);\n  }\n\n  /**\n   * Gets the items in the cart as an Observable.\n   * A ReplaySubject is used to re-emit the cart's items to newly instantiated\n   * components.\n   */\n  getItems(): ReplaySubject<Product[]> {\n    return this.subject;\n  }\n\n  /**\n   * Removes an item entirely from the cart.\n   * @param productId the Product ID of the corresponding item\n   */\n  removeItem(productId: number): void {\n    // find the item\n    const index = this.items.findIndex(product => product.id === productId)\n\n    if (index >= 0) {\n      const item = this.items[index];\n\n      // remove the item and notify observers\n      this.items.splice(index, 1);\n      this.subject.next(this.items);\n\n      // update the data layer\n      this.datalayer.removeFromCart(item, this.items);\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAnalytics } from '@angular/fire/analytics';\nimport * as firebase from 'firebase';\n\nimport { Cart, Price, ProductInfo, ProductItem, TotalCartPrice } from '../models/ceddl';\nimport { Product } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatalayerService {\n\n  constructor(private analytics: AngularFireAnalytics) { }\n\n  /**\n   * Updates data layers with product information added to the cart.\n   * @param product added\n   * @param items in the cart after addition\n   */\n  addToCart(product: Product, items: Product[]) {\n    // Google\n    this.analytics.logEvent(firebase.default.analytics.EventName.ADD_TO_CART, product);\n\n    // Tealium\n    Object.assign(((window as any).utag.data), this.tealiumCart(product, items, 'cart_add'));\n\n    // CEDDL\n    const digitalData = window['digitalData'] as any;\n    (digitalData.cart as Cart).item = items.map(item => this.ceddlProductItem(item));\n    (digitalData.cart as Cart).price = this.ceddlTotalCartPrice((digitalData.cart as Cart).item);\n  }\n\n  /**\n   * Updates data layers with product information removed from the cart.\n   * @param product removed\n   * @param items in the cart after removal\n   */\n  removeFromCart(product: Product, items: Product[]) {\n    // Google\n    this.analytics.logEvent(firebase.default.analytics.EventName.REMOVE_FROM_CART, product);\n\n    // Tealium\n    Object.assign(((window as any).utag.data), this.tealiumCart(product, items, 'cart_remove'));\n\n    // CEDDL\n    const digitalData = window['digitalData'] as any;\n    (digitalData.cart as Cart).item = items.map(item => this.ceddlProductItem(item));\n    (digitalData.cart as Cart).price = this.ceddlTotalCartPrice((digitalData.cart as Cart).item);\n  }\n\n  /**\n   * Updates data layers with checkout information.\n   * @param items used during checkout\n   */\n  checkout(items: Product[]) {\n    // Google\n    this.analytics.logEvent(firebase.default.analytics.EventName.PURCHASE, { items });\n\n    // Tealium\n    Object.assign(((window as any).utag.data), this.tealiumCheckout(items));\n  }\n\n  /**\n   * Builds a Tealium cart object for the data layer.\n   * @param product added or removed from the cart\n   * @param items currently in the cart (after addition or removal)\n   * @param tealiumEvent name from the retail definition (i.e. cart_add or cart_remove)\n   */\n  private tealiumCart(product: Product, items: Product[], tealiumEvent: 'cart_add' | 'cart_remove'): any {\n    // NOTE toString() for numeric values is recommended in Tealium documentation\n    return {\n      cart_product_id: items.map((item: Product) => item.id.toString()),\n      cart_product_price: items.map((item: Product) => item.price.toString()),\n      cart_product_quantity: items.map((item: Product) => item.quantity.toString()),\n      product_id: [product.id],\n      product_image_url: [product.image],\n      product_name: [product.title],\n      product_original_price: [product.price],\n      product_price: [product.price],\n      product_quantity: [product.quantity.toString()],\n      tealium_event: tealiumEvent\n    };\n  }\n\n  /**\n   * Builds a Tealium checkout object for the data layer.\n   * @param items currently in the cart\n   */\n  private tealiumCheckout(items: Product[]): any {\n    return {\n      cart_total_items: items.length.toString(),\n      cart_total_value: items.reduce((tax: number, item: Product) => tax += (item.price * item.quantity) * 1.09, 0),\n      order_currency_code: 'USD',\n      order_discount_amount: '0.00',\n      order_id: Date.now().toString(),\n      order_payment_type: 'visa',\n      order_promo_code: '',\n      order_shipping_amount: `${items.length}.00`,\n      order_shipping_type: 'UPS',\n      order_subtotal: items.reduce((tax: number, item: Product) => tax += item.price * item.quantity, 0),\n      order_tax_amount: items.reduce((tax: number, item: Product) => tax += (item.price * item.quantity) * 1.09, 0),\n      order_total: items.reduce((tax: number, item: Product) => tax += (item.price * item.quantity) * 1.09, 0),\n      page_name: 'Order Confirmation - Thank You',\n      page_type: 'order',\n      product_id: items.map(item => item.id.toString()),\n      product_image_url: items.map(item => item.image),\n      product_name: items.map(item => item.title),\n      product_original_price: items.map(item => item.price.toString()),\n      product_price: items.map(item => item.price.toString()),\n      product_quantity: items.map(item => item.quantity.toString()),\n      tealium_event: 'purchase'\n    };\n  }\n\n  /**\n   * CEDDL Price converter.\n   * @param item to convert\n   */\n  ceddlPrice(item: Product): Price {\n    return {\n      basePrice: item.price,\n      currency: 'USD',\n      taxRate: 0.09,\n      shipping: 1.00,\n      shippingMethod: 'UPS-Ground',\n      priceWithTax: item.price * 1.09,\n      voucherCode: '',\n      voucherDiscount: 0.00,\n    };\n  }\n\n  /**\n   * CEDDL ProductInfo converter.\n   * @param product to convert\n   */\n  ceddlProductInfo(product: Product): ProductInfo {\n    return {\n      productID: product.id.toString(),\n      productName: product.title,\n      description: product.description,\n      productImage: product.image,\n      productURL: location.host,\n      productThumbnail: product.image,\n      manufacturer: 'FruitShoppe',\n      sku: product.id.toString(),\n      color: 'N/A',\n      size: 'N/A',\n    };\n  }\n\n  /**\n   * CEDDL ProductItem converter.\n   * @param item to convert\n   */\n  ceddlProductItem(item: Product): ProductItem {\n    return {\n      productInfo: this.ceddlProductInfo(item),\n      category: {\n        primaryCategory: 'fruit',\n      },\n      quantity: item.quantity,\n      price: this.ceddlPrice(item),\n      linkedProduct: [],\n      attributes: {},\n    };\n  }\n\n  /**\n   * CEDDL TotalCartPrice converter.\n   * @param items to build TotalCartPrice\n   */\n  ceddlTotalCartPrice(items: ProductItem[]): TotalCartPrice {\n    return {\n      basePrice: items.reduce((price: number, item: ProductItem) => price += item.price.basePrice * item.quantity, 0),\n      voucherCode: '',\n      voucherDiscount: 0.00,\n      currency: 'USD',\n      taxRate: 0.09,\n      shipping: items.reduce((price: number, item: ProductItem) => price += item.price.shipping, 0),\n      shippingMethod: 'UPS-Ground',\n      priceWithTax: items.reduce((price: number, item: ProductItem) => price += item.price.priceWithTax * item.quantity, 0),\n      cartTotal: items.reduce((price: number, item: ProductItem) => price += (item.price.priceWithTax * item.quantity) + item.price.shipping, 0)\n    };\n  }\n}\n","export * from './cart.service';\nexport * from './product.service';","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { Product } from '../models'\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  readonly imageUrl = 'https://fruitshoppe.firebaseapp.com/images'; // URL of product images folder\n  readonly apiUrl: string;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private http: HttpClient,\n    private snackBar: MatSnackBar,\n  ) {\n    // based on whether to use mocks or the API server, build the full API URL\n    this.apiUrl = environment.useMockApi ? `${environment.localApiRoot}/products.json` :\n      `${environment.remoteApiRoot}/products`;\n  }\n\n  /**\n   * Gets an observable that emits a product from the catalog.\n   * @param id the identifier of the product\n   */\n  getProduct(id: number): Observable<Product | null> {\n    // if using the mock API, just get all products and find the one with the given id\n    if (environment.useMockApi) {\n      return this.getProducts().pipe(\n        map(products => products.find(product => product.id === id)), // force the Products[] into a Product\n        catchError(this.handleError<Product>('getProduct', null))\n      );\n    } else {\n      const url = `${this.apiUrl}/${id}`;\n\n      return this.http.get<Product>(url).pipe(\n        map(product => this.setImageUrl(product)),\n        catchError(this.handleError<Product>('getProduct', null))\n      );\n    }\n  }\n\n  /**\n   * Gets an observable that emits a list of products from the catalog.\n   * @param query An optional query string to search for products\n   */\n  getProducts(query?: string): Observable<Product[]> {\n    // TODO (van) allow query parameter to filter mock products.json\n    const url = query ? `${this.apiUrl}?q=${query}` : this.apiUrl;\n\n    return this.http.get<Product[]>(url).pipe(\n      map(products => products.map(product => this.setImageUrl(product))),\n      catchError(this.handleError<Product[]>('getProducts', []))\n    );\n  }\n\n  /**\n   * Provides a selector to allow handling of errors from service calls.\n   * @param operation the operation display name that encountered an error\n   * @param result the return value that should be passed to the next operator\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: Error): Observable<T> => {\n      const { message } = error;\n\n      console.error(`${operation} failed: ${message}`);\n      this.snackBar.open(`Failed to get product(s). ${message}`, 'OK');\n\n      return of(result as T);\n    };\n  }\n\n  /**\n   * By default, products have the image filename in the `image` property.\n   * This function returns a copy of a product with the `image` property set to\n   * the full URL to the image. It also sanitizes the URL so that it is deemed\n   * safe by Angular.\n   * @param product\n   */\n  private setImageUrl(product: Product): Product {\n    let { image } = product;\n    image = `${this.imageUrl}/${image}`;\n\n    // depending on the usage of the URL, sanitize\n    this.sanitizer.bypassSecurityTrustStyle(image); // if image is used as a style backgroundImage\n\n    return {\n      ...product,\n      image\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n/**\n * Define configuration options used by the app:\n * production - whether or not this app is running in production\n * localApiRoot - mock files that contain data (i.e. emulate an API resource locally)\n * remoteApiRoot - the API base URL if hosting the backend demo (https://github.com/fullstorydev/api-shoppe-demo)\n * useMockApi - true to use localApi, false to use the remoteApi\n */\nexport const environment = {\n  production: false,\n  localApiRoot: '/assets',\n  remoteApiRoot: 'http://localhost:3000/api',\n  useMockApi: true,\n  orgId: '173V6P',\n  firebase: {\n    // optionally add your firebase config here\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}